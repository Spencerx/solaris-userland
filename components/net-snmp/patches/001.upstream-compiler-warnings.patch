Upstream patch from
https://github.com/net-snmp/net-snmp/commit/4916ce00736296be79619d1debecbb74c7beee33

Includes fixes for warnings which gcc 14 turned into errors

From 4916ce00736296be79619d1debecbb74c7beee33 Mon Sep 17 00:00:00 2001
From: Bart Van Assche <bvanassche@acm.org>
Date: Sun, 24 Jun 2018 10:46:44 -0700
Subject: [PATCH] Fix Solaris compiler warnings

This patch does not change any functionality.
---
 agent/mibgroup/hardware/cpu/cpu_kstat.c       |  7 ++--
 agent/mibgroup/hardware/fsys/fsys_mntent.c    |  2 +-
 .../host/data_access/swinst_pkginfo.c         |  4 +-
 .../host/data_access/swrun_procfs_psinfo.c    |  4 +-
 agent/mibgroup/host/hr_system.c               | 24 ++++++------
 .../data_access/route_solaris.c               | 15 +++-----
 .../data_access/defaultrouter_solaris2.c      |  2 +-
 .../ip-mib/data_access/defaultrouter_sysctl.c |  2 +-
 agent/mibgroup/kernel_sunos5.c                | 23 +++++++----
 agent/mibgroup/kernel_sunos5.h                | 38 +++++++++----------
 agent/mibgroup/mibII/at.c                     |  3 ++
 agent/mibgroup/mibII/data_access/at_solaris.c |  4 +-
 apps/snmpnetstat/routex.c                     |  3 +-
 apps/snmpping.c                               |  2 +-
 snmplib/system.c                              |  5 ++-
 snmplib/transports/snmpIPv6BaseDomain.c       |  2 +-
 snmplib/transports/snmpUDPIPv6Domain.c        |  2 +-
 .../fulltests/unit-tests/T004snmp_enum_clib.c |  2 +-
 .../unit-tests/T014gethostbyaddr_clib.c       |  2 +-
 19 files changed, 78 insertions(+), 68 deletions(-)

diff --git a/agent/mibgroup/hardware/cpu/cpu_kstat.c b/agent/mibgroup/hardware/cpu/cpu_kstat.c
index 68bafee0b9..3cc396f28d 100644
--- a/agent/mibgroup/hardware/cpu/cpu_kstat.c
+++ b/agent/mibgroup/hardware/cpu/cpu_kstat.c
@@ -22,8 +22,9 @@ int _cpu_status(char *state);
      * Initialise the list of CPUs on the system
      *   (including descriptions)
      */
-void init_cpu_kstat( void ) {
-    int               i = 0, n = 0, clock, state_begin;
+void init_cpu_kstat(void)
+{
+    int               i = 0, n = 0, clock;
     char              ctype[16], ftype[16], state[10];
     kstat_t          *ksp;
     kstat_named_t    *ks_data;
@@ -49,8 +50,6 @@ void init_cpu_kstat( void ) {
             for (i=0, ks_data = ksp->ks_data; i < ksp->ks_ndata; i++, ks_data++) {
                 if ( strcmp( ks_data->name, "state" ) == 0 ) {
                     strlcpy(state, ks_data->value.c, sizeof(state));
-                } else if ( strcmp( ks_data->name, "state_begin" ) == 0 ) {
-                    state_begin = ks_data->value.i32;
                 } else if ( strcmp( ks_data->name, "cpu_type" ) == 0 ) {
                     strlcpy(ctype, ks_data->value.c, sizeof(ctype));
                 } else if ( strcmp( ks_data->name, "fpu_type" ) == 0 ) {
diff --git a/agent/mibgroup/hardware/fsys/fsys_mntent.c b/agent/mibgroup/hardware/fsys/fsys_mntent.c
index 3cdcea1fbd..62e2953faa 100644
--- a/agent/mibgroup/hardware/fsys/fsys_mntent.c
+++ b/agent/mibgroup/hardware/fsys/fsys_mntent.c
@@ -212,7 +212,7 @@ netsnmp_fsys_arch_load( void )
         if ( _fsys_remote( entry->device, entry->type ))
             entry->flags |= NETSNMP_FS_FLAG_REMOTE;
 #if HAVE_HASMNTOPT
-        if (hasmntopt( m, "ro" ))
+        if (hasmntopt( m, NETSNMP_REMOVE_CONST(char *, "ro") ))
             entry->flags |= NETSNMP_FS_FLAG_RONLY;
         else
             entry->flags &= ~NETSNMP_FS_FLAG_RONLY;
diff --git a/agent/mibgroup/host/data_access/swinst_pkginfo.c b/agent/mibgroup/host/data_access/swinst_pkginfo.c
index 861d79f0fa..b10fee0665 100644
--- a/agent/mibgroup/host/data_access/swinst_pkginfo.c
+++ b/agent/mibgroup/host/data_access/swinst_pkginfo.c
@@ -182,8 +182,8 @@ netsnmp_swinst_arch_load( netsnmp_container *container, u_int flags)
             CONTAINER_INSERT(container, entry);
 
 #ifdef HAVE_PKGINFO
-	    v = pkgparam( dp->d_name, "VERSION" );
-	    c = pkgparam( dp->d_name, "CATEGORY" );
+	    v = pkgparam( dp->d_name, NETSNMP_REMOVE_CONST(char *, "VERSION") );
+	    c = pkgparam( dp->d_name, NETSNMP_REMOVE_CONST(char *, "CATEGORY") );
 
 	    entry->swName_len = snprintf( entry->swName, sizeof(entry->swName),
 					  "%s-%s", dp->d_name, v );
diff --git a/agent/mibgroup/host/data_access/swrun_procfs_psinfo.c b/agent/mibgroup/host/data_access/swrun_procfs_psinfo.c
index 7aa0fa01b9..342bf565f2 100644
--- a/agent/mibgroup/host/data_access/swrun_procfs_psinfo.c
+++ b/agent/mibgroup/host/data_access/swrun_procfs_psinfo.c
@@ -56,7 +56,7 @@ netsnmp_arch_swrun_container_load( netsnmp_container *container, u_int flags)
     DIR                 *procdir = NULL;
     struct dirent       *procentry_p;
     psinfo_t             psinfo;
-    int                  pid, rc, fd;
+    int                  pid, fd;
     char                *cp, buf[512];
     netsnmp_swrun_entry *entry;
 
@@ -77,7 +77,7 @@ netsnmp_arch_swrun_container_load( netsnmp_container *container, u_int flags)
         entry = netsnmp_swrun_entry_create(pid);
         if (NULL == entry)
             continue;   /* error already logged by function */
-        rc = CONTAINER_INSERT(container, entry);
+        CONTAINER_INSERT(container, entry);
 
         /*
          * Now extract the interesting information
diff --git a/agent/mibgroup/host/hr_system.c b/agent/mibgroup/host/hr_system.c
index e055985683..dfa631424f 100644
--- a/agent/mibgroup/host/hr_system.c
+++ b/agent/mibgroup/host/hr_system.c
@@ -433,7 +433,7 @@ set_solaris_bootcommand_parameter(int action,
         case RESERVE2: {
             /* create copy of old value */
             if(statP) {
-                int old_val_len=strlen(statP);
+                int old_val_len = strlen((const char *)statP);
                 if(old_val_len >= sizeof(old_value)) {
                     p_old_value=(char *)malloc(old_val_len+1);
                     if(p_old_value==NULL) {
@@ -441,7 +441,7 @@ set_solaris_bootcommand_parameter(int action,
                         return SNMP_ERR_GENERR;
                     } 
                 }
-                strlcpy(p_old_value,statP,old_val_len+1);
+                strlcpy(p_old_value, (const char *)statP, old_val_len+1);
             } else { 
                 p_old_value=NULL;
             }
@@ -537,16 +537,16 @@ static long get_max_solaris_processes(void) {
     static long maxprocs=-1;
 
     /* assume only necessary to compute once, since /etc/system must be modified */
-    if (maxprocs == -1) {
-        if ( (ksc=kstat_open()) != NULL && 
-             (ks=kstat_lookup(ksc, "unix", 0, "var")) != NULL && 
-             (kstat_read(ksc, ks, &v) != -1)) {
-
-            maxprocs=v.v_proc;
-        }
-        if(ksc) {
-            kstat_close(ksc);
-        }
+    if (maxprocs >= 0)
+        return maxprocs;
+
+    ksc = kstat_open();
+    if (ksc) {
+        ks = kstat_lookup(ksc, NETSNMP_REMOVE_CONST(char *, "unix"), 0,
+                          NETSNMP_REMOVE_CONST(char *, "var"));
+        if (ks && kstat_read(ksc, ks, &v) != -1)
+            maxprocs = v.v_proc;
+        kstat_close(ksc);
     }
 
     return maxprocs;
diff --git a/agent/mibgroup/ip-forward-mib/data_access/route_solaris.c b/agent/mibgroup/ip-forward-mib/data_access/route_solaris.c
index 82612ed77a..d72830cd36 100644
--- a/agent/mibgroup/ip-forward-mib/data_access/route_solaris.c
+++ b/agent/mibgroup/ip-forward-mib/data_access/route_solaris.c
@@ -20,8 +20,8 @@
 #include "if-mib/data_access/interface_ioctl.h"
 #include "route_private.h"
 
-static int _load_v4(netsnmp_container *container, u_long *count);
-static int _load_v6(netsnmp_container *container, u_long *count);
+static int _load_v4(netsnmp_container *container);
+static int _load_v6(netsnmp_container *container);
 
 /** arch specific load
  * @internal
@@ -34,7 +34,6 @@ int
 netsnmp_access_route_container_arch_load(netsnmp_container* container,
                                          u_int load_flags)
 {
-    u_long          count = 0;
     int             rc;
 
     DEBUGMSGTL(("access:route:container",
@@ -45,7 +44,7 @@ netsnmp_access_route_container_arch_load(netsnmp_container* container,
         return -1;
     }
 
-    rc = _load_v4(container, &count);
+    rc = _load_v4(container);
     
 #ifdef NETSNMP_ENABLE_IPV6
     if((0 != rc) || (load_flags & NETSNMP_ACCESS_ROUTE_LOAD_IPV4_ONLY))
@@ -55,7 +54,7 @@ netsnmp_access_route_container_arch_load(netsnmp_container* container,
      * load ipv6. ipv6 module might not be loaded,
      * so ignore -2 err (file not found)
      */
-    rc = _load_v6(container, &count);
+    rc = _load_v6(container);
     if (-2 == rc)
         rc = 0;
 #endif
@@ -148,7 +147,7 @@ IP6_Cmp_Route(void *addr, void *ep)
 }
 
 
-static int _load_v4(netsnmp_container *container, u_long *count)
+static int _load_v4(netsnmp_container *container)
 {
     netsnmp_route_entry *entry;
     mib2_ipRouteEntry_t Curentry, Nextentry;
@@ -197,13 +196,12 @@ static int _load_v4(netsnmp_container *container, u_long *count)
 	    netsnmp_access_route_entry_free(entry);
 	    continue;
 	}
-	*count++;
     }
     return 0;
 }
 
 
-static int _load_v6(netsnmp_container *container, u_long *count)
+static int _load_v6(netsnmp_container *container)
 {
     netsnmp_route_entry *entry;
     mib2_ipv6RouteEntry_t Curentry, Nextentry;
@@ -253,7 +251,6 @@ static int _load_v6(netsnmp_container *container, u_long *count)
 	    netsnmp_access_route_entry_free(entry);
 	    continue;
 	}
-	*count++;
     }
     return 0;
 }
diff --git a/agent/mibgroup/ip-mib/data_access/defaultrouter_solaris2.c b/agent/mibgroup/ip-mib/data_access/defaultrouter_solaris2.c
index 38c3725be6..3700383719 100644
--- a/agent/mibgroup/ip-mib/data_access/defaultrouter_solaris2.c
+++ b/agent/mibgroup/ip-mib/data_access/defaultrouter_solaris2.c
@@ -9,6 +9,7 @@
 
 #include <net-snmp/agent/net-snmp-agent-includes.h>
 #include <net-snmp/data_access/defaultrouter.h>
+#include <net-snmp/data_access/interface.h>
 
 #include "ip-mib/ipDefaultRouterTable/ipDefaultRouterTable.h"
 #include "defaultrouter_private.h"
@@ -137,6 +138,5 @@ _load_defaultrouter_from_mib2(netsnmp_container *container, int family)
         }
     }
 
-out:
     return 0;
 }
diff --git a/agent/mibgroup/ip-mib/data_access/defaultrouter_sysctl.c b/agent/mibgroup/ip-mib/data_access/defaultrouter_sysctl.c
index c5e6210750..824ed50ec2 100644
--- a/agent/mibgroup/ip-mib/data_access/defaultrouter_sysctl.c
+++ b/agent/mibgroup/ip-mib/data_access/defaultrouter_sysctl.c
@@ -163,7 +163,7 @@ _load_defaultrouter_from_sysctl(netsnmp_container *container, int family)
     lim = buf + needed;
     for (next = buf; next < lim; next += rtm->rtm_msglen) {
 #ifdef NETSNMP_ENABLE_IPV6
-	struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;
+	struct in6_addr in6addr_any = { } /*IN6ADDR_ANY_INIT*/;
 #endif
 
         rtm = (struct rt_msghdr *)next;
diff --git a/agent/mibgroup/kernel_sunos5.c b/agent/mibgroup/kernel_sunos5.c
index 30025f9108..f70455acd1 100644
--- a/agent/mibgroup/kernel_sunos5.c
+++ b/agent/mibgroup/kernel_sunos5.c
@@ -202,8 +202,10 @@ static int _dlpi_parse_devname(char *devname, int *ppap);
 
 
 
+#if !defined(HAVE_IF_NAMEINDEX) || !defined(NETSNMP_INCLUDE_IFTABLE_REWRITES)
 static int
 Name_cmp(void *, void *);
+#endif
 
 static void
 init_mibcache_element(mibcache * cp);
@@ -305,7 +307,8 @@ getKstatInt(const char *classname, const char *statname,
     if ((ksc = kstat_fd) == NULL) {
 	goto Return;
     }
-    ks = kstat_lookup(ksc, classname, -1, statname);
+    ks = kstat_lookup(ksc, NETSNMP_REMOVE_CONST(char *, classname),
+                      -1, NETSNMP_REMOVE_CONST(char *, statname));
     if (ks == NULL) {
 	DEBUGMSGTL(("kernel_sunos5", "class %s, stat %s not found\n",
 		classname ? classname : "NULL",
@@ -318,7 +321,7 @@ getKstatInt(const char *classname, const char *statname,
 		classname ? classname : "NULL", statname ? statname : "NULL"));
 	goto Return;
     }
-    named = kstat_data_lookup(ks, varname);
+    named = kstat_data_lookup(ks, NETSNMP_REMOVE_CONST(char *, varname));
     if (named == NULL) {
 	DEBUGMSGTL(("kernel_sunos5", "no var %s for class %s stat %s\n",
 		varname, classname ? classname : "NULL",
@@ -408,7 +411,8 @@ getKstat(const char *statname, const char *varname, void *value)
      * contain all available modules. 
      */
 
-    if ((ks = kstat_lookup(ksc, "unix", 0, "kstat_headers")) == NULL) {
+    if ((ks = kstat_lookup(ksc, NETSNMP_REMOVE_CONST(char *, "unix"),
+                           0, NETSNMP_REMOVE_CONST(char *, "kstat_headers"))) == NULL) {
 	ret = -10;
 	goto Return;        /* kstat errors */
     }
@@ -442,7 +446,8 @@ getKstat(const char *statname, const char *varname, void *value)
     /*
      * Get the named statistics 
      */
-    if ((ks = kstat_lookup(ksc, module_name, instance, statname)) == NULL) {
+    if ((ks = kstat_lookup(ksc, module_name, instance,
+                           NETSNMP_REMOVE_CONST(char *, statname))) == NULL) {
 	ret = -10;
 	goto Return;        /* kstat errors */
     }
@@ -563,7 +568,8 @@ getKstatString(const char *statname, const char *varname,
      * contain all available modules.
      */
 
-    if ((ks = kstat_lookup(ksc, "unix", 0, "kstat_headers")) == NULL) {
+    if ((ks = kstat_lookup(ksc, NETSNMP_REMOVE_CONST(char *, "unix"),
+                           0, NETSNMP_REMOVE_CONST(char *, "kstat_headers"))) == NULL) {
         ret = -10;
         goto Return;        /* kstat errors */
     }
@@ -597,7 +603,8 @@ getKstatString(const char *statname, const char *varname,
     /*
      * Get the named statistics
      */
-    if ((ks = kstat_lookup(ksc, module_name, instance, statname)) == NULL) {
+    if ((ks = kstat_lookup(ksc, module_name, instance,
+                           NETSNMP_REMOVE_CONST(char *, statname))) == NULL) {
         ret = -10;
         goto Return;        /* kstat errors */
     }
@@ -1759,7 +1766,7 @@ set_if_info(mib2_ifEntry_t *ifp, unsigned index, char *name, uint64_t flags,
 static int 
 get_if_stats(mib2_ifEntry_t *ifp)
 {
-    Counter l_tmp;
+    int l_tmp;
     char *name = ifp->ifDescr.o_bytes;
 
     if (strchr(name, ':'))
@@ -1846,6 +1853,7 @@ Get_everything(void *x, void *y)
     return 0;             /* Always TRUE */
 }
 
+#if !defined(HAVE_IF_NAMEINDEX) || !defined(NETSNMP_INCLUDE_IFTABLE_REWRITES)
 /*
  * Compare name and IP address of the interface to ARP table entry.
  * Needed to obtain the physical address of the interface in getif.
@@ -1866,6 +1874,7 @@ Name_cmp(void *ifrp, void *ep)
 	return 1;
     }
 }
+#endif
 
 /*
  * Try to determine the index of a particular interface. If mfd-rewrites is
diff --git a/agent/mibgroup/kernel_sunos5.h b/agent/mibgroup/kernel_sunos5.h
index 3b4b82e7fd..bf07653d5f 100644
--- a/agent/mibgroup/kernel_sunos5.h
+++ b/agent/mibgroup/kernel_sunos5.h
@@ -126,28 +126,28 @@ typedef struct mibmap {
 typedef unsigned long TimeTicks;
 
 typedef struct mib2_ifEntry {
-    int             ifIndex;    /* ifEntry 1 */
+    unsigned int    ifIndex;    /* ifEntry 1 */
     DeviceName      ifDescr;    /* ifEntry 2 */
-    int             ifType;     /* ifEntry 3 */
-    int             ifMtu;      /* ifEntry 4 */
-    Gauge           ifSpeed;    /* ifEntry 5 */
+    unsigned int    ifType;     /* ifEntry 3 */
+    unsigned int    ifMtu;      /* ifEntry 4 */
+    int             ifSpeed;    /* ifEntry 5 */
     PhysAddress     ifPhysAddress;      /* ifEntry 6 */
-    int             ifAdminStatus;      /* ifEntry 7 */
-    int             ifOperStatus;       /* ifEntry 8 */
+    unsigned int    ifAdminStatus;      /* ifEntry 7 */
+    unsigned int    ifOperStatus;       /* ifEntry 8 */
     TimeTicks       ifLastChange;       /* ifEntry 9 */
-    Counter         ifInOctets; /* ifEntry 10 */
-    Counter         ifInUcastPkts;      /* ifEntry 11 */
-    Counter         ifInNUcastPkts;     /* ifEntry 12 */
-    Counter         ifInDiscards;       /* ifEntry 13 */
-    Counter         ifInErrors; /* ifEntry 14 */
-    Counter         ifInUnknownProtos;  /* ifEntry 15 */
-    Counter         ifOutOctets;        /* ifEntry 16 */
-    Counter         ifOutUcastPkts;     /* ifEntry 17 */
-    Counter         ifOutNUcastPkts;    /* ifEntry 18 */
-    Counter         ifOutDiscards;      /* ifEntry 19 */
-    Counter         ifOutErrors;        /* ifEntry 20 */
+    int             ifInOctets; /* ifEntry 10 */
+    int             ifInUcastPkts;      /* ifEntry 11 */
+    int             ifInNUcastPkts;     /* ifEntry 12 */
+    int             ifInDiscards;       /* ifEntry 13 */
+    int             ifInErrors; /* ifEntry 14 */
+    int             ifInUnknownProtos;  /* ifEntry 15 */
+    int             ifOutOctets;        /* ifEntry 16 */
+    int             ifOutUcastPkts;     /* ifEntry 17 */
+    int             ifOutNUcastPkts;    /* ifEntry 18 */
+    int             ifOutDiscards;      /* ifEntry 19 */
+    int             ifOutErrors;        /* ifEntry 20 */
     Gauge           ifOutQLen;  /* ifEntry 21 */
-    int             ifSpecific; /* ifEntry 22 */
+    unsigned int    ifSpecific; /* ifEntry 22 */
 
     /*
      * Support ifXTable.
@@ -164,7 +164,7 @@ typedef struct mib2_ifEntry {
     /*
      * Counters not part of ifTable or ifXTable
      */
-    Counter         ifCollisions;
+    int             ifCollisions;
     int             flags;           /* interface flags (IFF_*) */
 } mib2_ifEntry_t;
 
diff --git a/agent/mibgroup/mibII/at.c b/agent/mibgroup/mibII/at.c
index 80e6d88638..9f1631ef2a 100644
--- a/agent/mibgroup/mibII/at.c
+++ b/agent/mibgroup/mibII/at.c
@@ -18,6 +18,9 @@
 #include <net-snmp/net-snmp-includes.h>
 #include <net-snmp/agent/net-snmp-agent-includes.h>
 #include "at.h"
+#ifdef solaris2
+#include "kernel_sunos5.h"
+#endif
 
 /*
  * define the structure we're going to ask the agent to register our
diff --git a/agent/mibgroup/mibII/data_access/at_solaris.c b/agent/mibgroup/mibII/data_access/at_solaris.c
index b14a999a01..0099e8e5c6 100644
--- a/agent/mibgroup/mibII/data_access/at_solaris.c
+++ b/agent/mibgroup/mibII/data_access/at_solaris.c
@@ -41,7 +41,7 @@ AT_Cmp(void *addr, void *ep)
     index = Interface_Index_By_Name(mp->ipNetToMediaIfIndex.o_bytes,
                                     mp->ipNetToMediaIfIndex.o_length);
 #endif
-    DEBUGMSGTL(("mibII/at", "......... AT_Cmp %lx<>%lx %d<>%d (%.5s)\n",
+    DEBUGMSGTL(("mibII/at", "......... AT_Cmp %lx<>%lx %d<>%" NETSNMP_PRIo "d (%.5s)\n",
                 (unsigned long)mp->ipNetToMediaNetAddress,
                 (unsigned long)((if_ip_t *) addr)->ipAddr,
                 ((if_ip_t *) addr)->ifIdx, index,
@@ -165,7 +165,7 @@ var_atEntry(struct variable * vp,
         return (u_char *) & long_return;
     case IPMEDIAPHYSADDRESS:
         *var_len = Lowentry.ipNetToMediaPhysAddress.o_length;
-        return Lowentry.ipNetToMediaPhysAddress.o_bytes;
+        return (u_char *) Lowentry.ipNetToMediaPhysAddress.o_bytes;
     case IPMEDIANETADDRESS:
         *var_len = sizeof(addr_ret);
         addr_ret = Lowentry.ipNetToMediaNetAddress;
diff --git a/apps/snmpnetstat/routex.c b/apps/snmpnetstat/routex.c
index d2cf13abba..ce70660efb 100644
--- a/apps/snmpnetstat/routex.c
+++ b/apps/snmpnetstat/routex.c
@@ -517,7 +517,8 @@ p_rtnodex( struct route_entry *rp )
     }
     else if (rp->af == AF_INET6) {
         struct sockaddr_in6 *sin6 = (struct sockaddr_in6 *)&rp->dst;
-        struct in6_addr in6_addr_any = IN6ADDR_ANY_INIT;
+        struct in6_addr in6_addr_any = { } /*IN6ADDR_ANY_INIT*/;
+
         printf("%-*s ",
             WID_DST(AF_INET6),
                 memcmp(&sin6->sin6_addr, &in6_addr_any, sizeof(in6_addr_any)) == 0 ? "default" :
diff --git a/apps/snmpping.c b/apps/snmpping.c
index 325df92174..b335bd88f7 100644
--- a/apps/snmpping.c
+++ b/apps/snmpping.c
@@ -622,7 +622,7 @@ int main(int argc, char **argv)
         usernameLen = strlen(username);
     }
     if (1 /* !have-testname-arg */) {
-        snprintf(testname, sizeof(testname) - 1, "snmpping-%d", getpid());
+        snprintf(testname, sizeof(testname) - 1, "snmpping-%ld", (long)getpid());
         testname[32] = '\0';
         testnameLen = strlen(testname);
     }
diff --git a/snmplib/system.c b/snmplib/system.c
index 35ecc843f8..1d4cfc5c2c 100644
--- a/snmplib/system.c
+++ b/snmplib/system.c
@@ -702,11 +702,12 @@ get_uptime(void)
     u_long          lbolt = 0;
 
     if (ksc) {
-        ks = kstat_lookup(ksc, "unix", -1, "system_misc");
+        ks = kstat_lookup(ksc, NETSNMP_REMOVE_CONST(char *, "unix"), -1,
+                          NETSNMP_REMOVE_CONST(char *, "system_misc"));
         if (ks) {
             kid = kstat_read(ksc, ks, NULL);
             if (kid != -1) {
-                named = kstat_data_lookup(ks, "lbolt");
+                named = kstat_data_lookup(ks, NETSNMP_REMOVE_CONST(char *, "lbolt"));
                 if (named) {
 #ifdef KSTAT_DATA_UINT32
                     lbolt = named->value.ui32;
diff --git a/snmplib/transports/snmpIPv6BaseDomain.c b/snmplib/transports/snmpIPv6BaseDomain.c
index 46f70c028c..5547943b87 100644
--- a/snmplib/transports/snmpIPv6BaseDomain.c
+++ b/snmplib/transports/snmpIPv6BaseDomain.c
@@ -66,7 +66,7 @@
 
 
 #if defined(HAVE_WINSOCK_H) && !defined(mingw32)
-static const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;
+static const struct in6_addr in6addr_any = { } /*IN6ADDR_ANY_INIT*/;
 #endif
 
 
diff --git a/snmplib/transports/snmpUDPIPv6Domain.c b/snmplib/transports/snmpUDPIPv6Domain.c
index 3d003f2087..773943d421 100644
--- a/snmplib/transports/snmpUDPIPv6Domain.c
+++ b/snmplib/transports/snmpUDPIPv6Domain.c
@@ -35,7 +35,7 @@
 #endif
 
 #if defined(HAVE_WINSOCK_H) && !defined(mingw32)
-static const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;
+static const struct in6_addr in6addr_any = { } /*IN6ADDR_ANY_INIT*/;
 #endif
 
 #if HAVE_NETINET_IN_H
diff --git a/testing/fulltests/unit-tests/T004snmp_enum_clib.c b/testing/fulltests/unit-tests/T004snmp_enum_clib.c
index 5df00c514e..bad6ec894e 100644
--- a/testing/fulltests/unit-tests/T004snmp_enum_clib.c
+++ b/testing/fulltests/unit-tests/T004snmp_enum_clib.c
@@ -30,7 +30,7 @@
 char tmp_persist_file[256];
 char *se_find_result;
 
-sprintf(tmp_persist_file, "/tmp/snmp-enum-unit-test-%d", getpid());
+sprintf(tmp_persist_file, "/tmp/snmp-enum-unit-test-%ld", (long)getpid());
 netsnmp_setenv("SNMP_PERSISTENT_FILE", tmp_persist_file, 1);
 
 init_snmp_enum("snmp");
diff --git a/testing/fulltests/unit-tests/T014gethostbyaddr_clib.c b/testing/fulltests/unit-tests/T014gethostbyaddr_clib.c
index 13a2b5fa4c..804e792964 100644
--- a/testing/fulltests/unit-tests/T014gethostbyaddr_clib.c
+++ b/testing/fulltests/unit-tests/T014gethostbyaddr_clib.c
@@ -39,7 +39,7 @@ SOCK_STARTUP;
 
 {
     struct hostent *h;
-#ifdef cygwin
+#if defined(cygwin) || defined(solaris2)
     static const struct in6_addr v6loop = { { IN6ADDR_LOOPBACK_INIT } };
 #else
     static const struct in6_addr v6loop = IN6ADDR_LOOPBACK_INIT;
