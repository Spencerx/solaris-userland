#
# Enable login to a role for hostbased authentication if allowed by PAM.
#
# Sets PAM_AUSER item to user who is asserting a new identity before
# calling do_pam_account(). Implemented using existing static variable
# hostbased_cuser. The change is protected by new HAVE_PAM_AUSER ifdef-guard,
# which is set to defined on Solaris.
#
# Patch offered upstream:
#     https://bugzilla.mindrot.org/show_bug.cgi?id=2378
#
--- openssh-9.4p1/auth-pam.c
+++ openssh-9.4p1/auth-pam.c
@@ -1181,6 +1181,20 @@ if (sshpam_init(ssh, authctxt) == -1)
 		fatal("PAM: initialisation failed");
 }
 
+#ifdef HAVE_PAM_AUSER
+void
+do_pam_set_auser(const char* auser)
+{
+	if (auser != NULL) {
+		debug("PAM: setting PAM_AUSER to \"%s\"", auser);
+		sshpam_err = pam_set_item(sshpam_handle, PAM_AUSER, auser);
+		if (sshpam_err != PAM_SUCCESS)
+			error("PAM: failed to set PAM_AUSER: %s",
+			    pam_strerror(sshpam_handle, sshpam_err));
+	}
+}
+#endif
+
 void
 finish_pam(void)
 {
--- openssh-9.4p1/auth-pam.h
+++ openssh-9.4p1/auth-pam.h
@@ -31,6 +31,9 @@ void start_pam(struct ssh *);
 void finish_pam(void);
 u_int do_pam_account(void);
 void do_pam_session(struct ssh *);
+#ifdef HAVE_PAM_AUSER
+void do_pam_set_auser(const char *);
+#endif
 void do_pam_setcred(int );
 void do_pam_chauthtok(void);
 int do_pam_putenv(char *, char *);
--- openssh-9.4p1/auth.h
+++ openssh-9.4p1/auth.h
@@ -98,6 +98,9 @@ struct sshbuf	*session_info;	/* Auth inf
 #ifdef PAM_ENHANCEMENT
 	char		*authmethod_name;
 #endif 
+#ifdef HAVE_PAM_AUSER
+	char		*auser;
+#endif
 };
 
 /*
--- openssh-9.4p1/auth2-hostbased.c
+++ openssh-9.4p1/auth2-hostbased.c
@@ -80,6 +80,9 @@ #ifdef DEBUG_PK
 	debug("signature:");
 	sshbuf_dump_data(sig, slen, stderr);
 #endif
+#ifdef HAVE_PAM_AUSER
+	authctxt->auser = NULL;
+#endif
 	pktype = sshkey_type_from_name(pkalg);
 	if (pktype == KEY_UNSPEC) {
 		/* this is perfectly legal */
@@ -151,6 +154,13 @@ PRIVSEP(sshkey_verify(key, sig, slen,
 	    sshbuf_ptr(b), sshbuf_len(b), pkalg, ssh->compat, NULL)) == 0)
 		authenticated = 1;
 
+#ifdef HAVE_PAM_AUSER
+	if (authenticated) {
+		authctxt->auser = cuser;
+		cuser = NULL;
+	}
+#endif
+
 	auth2_record_key(authctxt, authenticated, key);
 	sshbuf_free(b);
 done:
--- openssh-9.4p1/auth2.c
+++ openssh-9.4p1/auth2.c
@@ -403,6 +403,14 @@ PRIVSEP(audit_event(ssh, SSH_LOGIN_ROOT_
 #endif
 	}
 
+#ifdef HAVE_PAM_AUSER
+	if (!use_privsep) {
+		do_pam_set_auser(authctxt->auser);
+		free(authctxt->auser);
+		authctxt->auser = NULL;      
+	}
+#endif
+
 	if (authenticated && options.num_auth_methods != 0) {
 
 #if defined(USE_PAM) && defined(PAM_ENHANCEMENT)
--- openssh-9.4p1/config.h.in
+++ openssh-9.4p1/config.h.in
@@ -1003,6 +1003,9 @@ #undef HAVE_OPENSSL_VERSION_NUM
 /* Define if you have Digital Unix Security Integration Architecture */
 #undef HAVE_OSF_SIA
 
+/* Define if you have PAM_AUSER PAM item */
+#undef HAVE_PAM_AUSER
+
 /* Define to 1 if you have the `pam_getenvlist' function. */
 #undef HAVE_PAM_GETENVLIST
 
--- openssh-9.4p1/configure.ac
+++ openssh-9.4p1/configure.ac
@@ -1175,6 +1175,7 @@ fi
 		],
 	)
 	TEST_SHELL=$SHELL	# let configure find us a capable shell
+ 	AC_DEFINE([HAVE_PAM_AUSER])
 	;;
 *-*-sunos4*)
 	CPPFLAGS="$CPPFLAGS -DSUNOS4"
--- openssh-9.4p1/monitor.c
+++ openssh-9.4p1/monitor.c
@@ -399,6 +399,12 @@ }
 		}
 	}
 
+#if defined(HAVE_PAM_AUSER) && defined(USE_PAM)
+	if (hostbased_cuser != NULL) {
+		free(hostbased_cuser);
+		hostbased_cuser = NULL;
+	}
+#endif
 	if (!authctxt->valid)
 		fatal_f("authenticated invalid user");
 	if (strcmp(auth_method, "unknown") == 0)
@@ -606,14 +612,16 @@ monitor_reset_key_state(void)
 {
 	/* reset state */
 	free(key_blob);
+#if !defined(HAVE_PAM_AUSER) || !defined(USE_PAM)
 	free(hostbased_cuser);
+	hostbased_cuser = NULL;
+#endif
 	free(hostbased_chost);
 	sshauthopt_free(key_opts);
 	key_blob = NULL;
 	key_bloblen = 0;
 	key_blobtype = MM_NOKEY;
 	key_opts = NULL;
-	hostbased_cuser = NULL;
 	hostbased_chost = NULL;
 }
 
@@ -1085,6 +1093,11 @@ int r;
 	if (!options.use_pam)
 		fatal("%s: PAM not enabled", __func__);
 
+#ifdef HAVE_PAM_AUSER
+	if (hostbased_cuser != NULL)
+		do_pam_set_auser(hostbased_cuser);
+#endif
+
 	ret = do_pam_account();
 
 	if ((r = sshbuf_put_u32(m, ret)) != 0 ||
