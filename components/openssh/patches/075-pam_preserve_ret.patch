#
# Propagate errors returned by pam_acct_mgmt() to the upper layer,
# so that user can be informed why the call really failed.
# Without these changes, all errors are mapped to PAM_ACCT_EXPIRED.
#
# This issue is tracked by upstream via bz3210.
#
# The patch can be removed in case bz3210 gets fixed and the fix
# addresses the problem in desired way. 
#
--- old/auth-pam.c	2024-10-07 11:58:59.926145217 +0200
+++ new/auth-pam.c	2024-10-07 13:01:01.013455309 +0200
@@ -423,10 +423,10 @@ do_pam_auth(struct pam_ctxt *ctxt)
 	if (sshpam_err != PAM_SUCCESS)
 		goto auth_fail;
 
-	if (!do_pam_account()) {
-		sshpam_err = PAM_ACCT_EXPIRED;
+	sshpam_err = do_pam_account();
+	if (sshpam_err != PAM_SUCCESS)
 		goto auth_fail;
-	}
+
 	if (sshpam_authctxt->force_pwchange) {
 		if ((buffer = sshbuf_new()) == NULL)
 			fatal("%s: sshbuf_new failed", __func__);
@@ -1078,26 +1078,32 @@ finish_pam(void)
 u_int
 do_pam_account(void)
 {
+	static int sshpam_err_saved = PAM_SUCCESS;
+
 	debug("%s: called", __func__);
-	if (sshpam_account_status != -1)
-		return (sshpam_account_status);
+	if (sshpam_account_status != -1) {
+		return (sshpam_err_saved);
+	}
 
 	expose_authinfo(__func__);
 
 	sshpam_err = pam_acct_mgmt(sshpam_handle, 0);
+	sshpam_err_saved = sshpam_err;
 	debug3("PAM: %s pam_acct_mgmt = %d (%s)", __func__, sshpam_err,
 	    pam_strerror(sshpam_handle, sshpam_err));
 
 	if (sshpam_err != PAM_SUCCESS && sshpam_err != PAM_NEW_AUTHTOK_REQD) {
 		sshpam_account_status = 0;
-		return (sshpam_account_status);
+		return (sshpam_err);
 	}
 
-	if (sshpam_err == PAM_NEW_AUTHTOK_REQD)
+	if (sshpam_err == PAM_NEW_AUTHTOK_REQD) {
 		sshpam_password_change_required(1);
+		sshpam_err = sshpam_err_saved = PAM_SUCCESS;
+	}
 
 	sshpam_account_status = 1;
-	return (sshpam_account_status);
+	return (sshpam_err);
 }
 
 void
--- old/auth2.c	2024-10-07 11:59:18.471771270 +0200
+++ new/auth2.c	2024-10-08 08:26:16.878960766 +0200
@@ -432,7 +432,7 @@ userauth_finish(struct ssh *ssh, int aut
 		 * perform account check for this service.
 		 */
 		if (options.use_pam && options.pam_service_per_authmethod &&
-		    !PRIVSEP(do_pam_account())) {
+		    PRIVSEP(do_pam_account()) != PAM_SUCCESS) {
 			/* if PAM returned a message, send it to the user */
 			if (sshbuf_len(loginmsg) > 0) {
 				if ((r = sshbuf_put(loginmsg, "\0", 1)) != 0)
@@ -479,7 +479,7 @@ userauth_finish(struct ssh *ssh, int aut
 #else
 	if (options.use_pam && authenticated) {
 #endif /* PAM_ENHANCEMENT */
-		int r, success = PRIVSEP(do_pam_account());
+		int r, success = (PRIVSEP(do_pam_account()) == PAM_SUCCESS);
 
 		/* If PAM returned a message, send it to the user. */
 		if (sshbuf_len(loginmsg) > 0) {
--- old/monitor.c	2024-10-07 15:42:57.876547607 +0200
+++ new/monitor.c	2024-10-08 08:23:57.316989336 +0200
@@ -1111,7 +1111,7 @@ mm_answer_pam_account(struct ssh *ssh, i
 
 	mm_request_send(sock, MONITOR_ANS_PAM_ACCOUNT, m);
 
-	return (ret);
+	return (ret == PAM_SUCCESS);
 }
 
 static void *sshpam_ctxt, *sshpam_authok;
