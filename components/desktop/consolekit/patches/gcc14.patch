GCC 14 fixes which resolve (note that Solaris PAM differs):

ck-sysdeps-solaris.c: In function 'get_system_vt_major':
ck-sysdeps-solaris.c:132:21: error: type defaults to 'int' in declaration of 'ret' [-Wimplicit-int]
  132 |         static      ret = -1;
      |                     ^~~

ck-vt-monitor.c: In function 'vt_add_watches':
ck-vt-monitor.c:395:24: error: assignment to 'void (*)(int)' from incompatible pointer type 'void (*)(void)' [-Wincompatible-pointer-types]
  395 |         act.sa_handler = handle_vt_active;
      |                        ^	  


ck-get-x11-server-pid.c: In function ‘main’:
ck-get-x11-server-pid.c:78:59: error: passing argument 2 of ‘ck_get_socket_peer_credentials’ from incompatible pointer type [-Wincompatible-pointer-types]
   78 |                 res = ck_get_socket_peer_credentials (fd, &pid, NULL, NULL);
      |                                                           ^~~~
      |                                                           |
      |                                                           int *
In file included from ck-get-x11-server-pid.c:35:
/builds/psumbera/userland-test/components/desktop/consolekit/ConsoleKit-0.4.1/src/ck-sysdeps.h:53:64: note: expected ‘pid_t *’ {aka  long int *’} but argument is of type ‘int *’
   53 |                                                pid_t          *pid,
      |                                                ~~~~~~~~~~~~~~~~^~~

ck-get-x11-display-device.c: In function ‘main’:
ck-get-x11-display-device.c:181:59: error: passing argument 2 of ‘ck_get_socket_peer_credentials’ from incompatible pointer type [-Wincompatible-pointer-types]
  181 |                 res = ck_get_socket_peer_credentials (fd, &pid, NULL, NULL);
      |                                                           ^~~~
      |                                                           |
      |                                                           int *
In file included from ck-get-x11-display-device.c:33:
/builds/psumbera/userland-test/components/desktop/consolekit/ConsoleKit-0.4.1/src/ck-sysdeps.h:53:64: note: expected ‘pid_t *’ {aka  long int *’} but argument is of type ‘int *’
   53 |                                                pid_t          *pid,
      |                                                ~~~~~~~~~~~~~~~~^~~

pam-ck-connector.c: In function ‘pam_sm_open_session’:
pam-ck-connector.c:275:35: error: passing argument 2 of ‘pam_get_user’ from incompatible pointer type [-Wincompatible-pointer-types]
  275 |         res = pam_get_user (pamh, &user, NULL);
      |                                   ^~~~~
      |                                   |
      |                                   const char **
In file included from pam-ck-connector.c:55:
/usr/include/security/pam_appl.h:209:16: note: expected ‘char **’ but argument is of type ‘const char **’
  209 |         char **__user,                  /* User Name */
      |         ~~~~~~~^~~~~~
pam-ck-connector.c:282:44: error: passing argument 3 of ‘pam_get_item’ from incompatible pointer type [-Wincompatible-pointer-types]
  282 |         res = pam_get_item (pamh, PAM_TTY, (const void **) &display_device);
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                            |
      |                                            const void **
/usr/include/security/pam_appl.h:170:17: note: expected ‘void **’ but argument is of type ‘const void **’
  170 |         void ** __item                  /* Address of place to put pointer */
      |         ~~~~~~~~^~~~~~
pam-ck-connector.c:304:46: error: passing argument 3 of ‘pam_get_item’ from incompatible pointer type [-Wincompatible-pointer-types]
  304 |         res = pam_get_item (pamh, PAM_RHOST, (const void **) &s);
      |                                              ^~~~~~~~~~~~~~~~~~
      |                                              |
      |                                              const void **
/usr/include/security/pam_appl.h:170:17: note: expected ‘void **’ but argument is of type ‘const void **’
  170 |         void ** __item                  /* Address of place to put pointer */
      |         ~~~~~~~~^~~~~~

ck-manager.c: In function 'check_rbac_permissions':
ck-manager.c:1087:14: error: implicit declaration of function 'chkauthattr' [-Wimplicit-function-declaration]
 1087 |             !chkauthattr (action, username)) {
      |              ^~~~~~~~~~~

--- ConsoleKit-0.4.1/src/ck-sysdeps-solaris.c
+++ ConsoleKit-0.4.1/src/ck-sysdeps-solaris.c
@@ -129,7 +129,7 @@
 static int
 get_system_vt_major ()
 {
-        static      ret = -1;
+        static int  ret = -1;
         struct stat st;
         int         res;
 
--- ConsoleKit-0.4.1/src/ck-vt-monitor.c
+++ ConsoleKit-0.4.1/src/ck-vt-monitor.c
@@ -165,7 +165,7 @@
 
 #if defined (__sun) && defined (HAVE_SYS_VT_H)
 static void
-handle_vt_active (void)
+handle_vt_active (int)
 {
         struct vt_stat state;
         guint          num;
--- ConsoleKit-0.4.1/tools/ck-history.c
+++ ConsoleKit-0.4.1/tools/ck-history.c
@@ -82,7 +82,7 @@
 }
 
 static gboolean
-process_log_gzstream (gzFile *fstream)
+process_log_gzstream (gzFile fstream)
 {
         char line[MAX_LINE_LEN];
 
@@ -119,7 +119,7 @@
         gboolean ret;
 
         if (g_str_has_suffix (filename, ".gz")) {
-                gzFile *f;
+                gzFile f;
                 f = gzopen (filename, "r");
                 if (f == NULL) {
                         int         errnum;
--- ConsoleKit-0.4.1/tools/ck-get-x11-server-pid.c
+++ ConsoleKit-0.4.1/tools/ck-get-x11-server-pid.c
@@ -71,14 +71,14 @@
         fd = ConnectionNumber (xdisplay);
 
         if (fd > 0) {
-                int      pid;
+                pid_t pid;
                 gboolean res;
 
                 ret = 0;
                 res = ck_get_socket_peer_credentials (fd, &pid, NULL, NULL);
                 if (res) {
                         if (pid > 0) {
-                                printf ("%d\n", pid);
+                                printf ("%ld\n", (long)pid);
                         }
                 }
         }
--- ConsoleKit-0.4.1/tools/ck-get-x11-display-device.c
+++ ConsoleKit-0.4.1/tools/ck-get-x11-display-device.c
@@ -173,7 +173,7 @@
         fd = ConnectionNumber (xdisplay);
 
         if (fd > 0) {
-                int      pid;
+                pid_t    pid;
                 char    *device;
                 gboolean res;
 
--- ConsoleKit-0.4.1/pam-ck-connector/pam-ck-connector.c
+++ ConsoleKit-0.4.1/pam-ck-connector/pam-ck-connector.c
@@ -236,7 +236,7 @@
 {
         int         ret;
         int         res;
-        const char *user;
+        char       *user;
         const char *display_device;
         const char *x11_display;
         const char *x11_display_device;
@@ -279,7 +279,7 @@
         }
 
         display_device = NULL;
-        res = pam_get_item (pamh, PAM_TTY, (const void **) &display_device);
+        res = pam_get_item (pamh, PAM_TTY, (void **) &display_device);
         if (res != PAM_SUCCESS || display_device == NULL || display_device[0] == '\0') {
                 ck_pam_syslog (pamh, LOG_ERR, "cannot determine display-device");
                 goto out;
@@ -301,7 +301,7 @@
 
         remote_host_name = NULL;
         s = NULL;
-        res = pam_get_item (pamh, PAM_RHOST, (const void **) &s);
+        res = pam_get_item (pamh, PAM_RHOST, (void **) &s);
         if (res == PAM_SUCCESS && s != NULL && s[0] != '\0') {
                 remote_host_name = s;
                 if (opt_debug) {
--- ConsoleKit-0.4.1/src/ck-manager.c
+++ ConsoleKit-0.4.1/src/ck-manager.c
@@ -40,6 +40,7 @@
 #include <dbus/dbus-glib-lowlevel.h>
 
 #if (defined(sun) && defined(__SVR4))
+#include <auth_attr.h>
 #include <libscf_priv.h>
 #include <ctype.h>
 #endif
