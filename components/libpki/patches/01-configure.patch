Patch origin: in-house
Patch status: Solaris-specific; not suitable for upstream

Need to add architectures for Oracle build environments.

Need to disable rpath to avoid including 32-bit runpath in 64-bit binary.

Need to add AC_LANG_SOURCE to resolve autoreconf warnings.

Add vendor for openldap,  /usr/lib/libldap.so and /usr/include/ldap.h
--- old/configure.ac	2022-10-12 15:24:34.982444835 +0200
+++ new/configure.ac	2023-01-17 11:38:43.045063386 +0100
@@ -44,11 +44,20 @@ case "$my_arch" in
     mybits="64"
     mybits_install="64"
     ;;
+  *i86pc)
+    mybits="64"
+    mybits_install="64"
+    ;;
   *sparc*)
     mybits="64"
     mybits_install="64"
     is_sparc="yes"
     ;;
+  *sun4v*)
+    mybits="64"
+    mybits_install="64"
+    is_sparc="yes"
+    ;;
   *aix*)
     mybits="64"
     mybits_install="64"
@@ -280,11 +289,13 @@ case "${build_os}" in
  *sun*) myarch=solaris
 		shlext=so
 		rpath_opt="-R "
+		enable_rpath=no
 		;;
  *solaris*)
 		myarch=solaris
 		shlext=so
 		rpath_opt="-R "
+		enable_rpath=no
 		;;
  *hpux*)        myarch=hpux
 		shlext=so
@@ -669,7 +680,7 @@ dnl AC_MSG_ERROR( [****** ($DIST_NAME) I
 
 dnl ==================== BEGIN LDAP Support =======================
 
-ldap_vendor=
+ldap_vendor="OPENLDAP"
 ldap="yes"
 ldap_prefix=""
 ldap_path=""
@@ -679,9 +690,9 @@ ldap_ldadd=
 ldap_ldflags=
 
 library_prefix=
-library_ldflags=
-library_cflags=
-library_ldadd=
+library_ldflags=""
+library_cflags="-I/usr/include"
+library_ldadd="-lldap"
 
 AC_ARG_ENABLE(ldap,
 	AC_HELP_STRING( [--enable-ldap],
@@ -717,7 +728,6 @@ if ! [[ "x$ldap" = "xno" ]] ; then
    fi
 
    	dnl Now we have to check which LDAP vendor is available
-	AC_LDAP_VENDOR( $ldap_prefix )
 
    if [[ "x$ldap_vendor" = "x"  ]] ; then
 	AC_MSG_RESULT([*** ERROR: No supported LDAP vendor found.])
@@ -1541,10 +1551,10 @@ AC_SUBST(sys_cflags)
 libpki_cflags="-I${package_prefix}/include ${openssl_cflags} ${composite_cflags} ${ldap_cflags} ${kmf_cflags} ${xml2_cflags} ${mysql_cflags} ${pg_cflags}"
 
 if [[ "${enable_shared}" = "yes" ]] ; then
-  libpki_ldflags="-L${lib_prefix} ${openssl_ldflags} ${openssl_ldadd} ${composite_ldflags} ${xml2_ldflags} ${mysql_ldflags} ${pg_ldflags} ${kmf_ldflags}"
+  libpki_ldflags="${openssl_ldflags} ${openssl_ldadd} ${composite_ldflags} ${xml2_ldflags} ${mysql_ldflags} ${pg_ldflags} ${kmf_ldflags}"
   libpki_ldadd="-lpthread ${openssl_ldadd} ${composite_ldadd} ${xml2_ldadd} ${mysql_ldadd} ${pg_ldadd} ${kmf_ldadd}"
 else
-  libpki_ldflags="-static -L${lib_prefix} ${openssl_ldflags} ${composite_cflags} ${ldap_ldflags} ${xml2_ldflags} ${mysql_ldflags} ${pg_ldflags} ${kmf_ldflags}"
+  libpki_ldflags="-static ${openssl_ldflags} ${composite_cflags} ${ldap_ldflags} ${xml2_ldflags} ${mysql_ldflags} ${pg_ldflags} ${kmf_ldflags}"
   libpki_ldadd="-lpthread ${openssl_ldadd} ${composite_ldadd} ${ldap_ldadd} ${xml2_ldadd} ${mysql_ldadd} ${pg_ldadd} ${resolv_ldadd} ${kmf_ldadd}"
 fi
 
@@ -1575,7 +1585,7 @@ for dir in $c_dirs ; do
     has_dir=`echo $libpki_cflags | grep "I${dir} "`
     if ! [[ "x$has_dir" = "x" ]] ; then
       libpki_cflags=`echo "$libpki_cflags" | sed -e "s|-I${dir} ||g"`
-      libpki_cflags="-I${dir} $libpki_cflags"
+      libpki_cflags="$libpki_cflags -I${dir}"
     	AC_MSG_RESULT([Removed duplicate entries for -I$dir from libpki_cflags])
     fi
   fi
@@ -1597,11 +1607,11 @@ AC_SUBST(libpki_ldadd)
 dnl Internal Makefile
 if [[ "${enable_shared}" = "yes" ]] ; then
 	my_ldadd="-lpthread ${sys_ldadd} ${ldap_ldadd} ${openssl_ldadd} ${xml2_ldadd} ${kmf_ldadd} ${mysql_ldadd} ${pg_ldadd} ${resolv_ldadd} ${sys_ldadd}"
-	my_ldflags="-L${lib_prefix} ${openssl_ldflags} ${composite_ldflags} ${ldap_ldflags} ${xml2_ldflags} ${sys_ldflags} ${kmf_ldflags} ${mysql_ldflags} ${pg_ldflags}"
+	my_ldflags="${openssl_ldflags} ${composite_ldflags} ${ldap_ldflags} ${xml2_ldflags} ${sys_ldflags} ${kmf_ldflags} ${mysql_ldflags} ${pg_ldflags}"
 	test_libs="${sys_ldflags} ${sys_ldadd}"
 else
 	if [[ "$iphone_build" = "no" ]] ; then
-		my_ldflags="-static -L${lib_prefix} ${openssl_ldflags} ${composite_ldflags} ${ldap_ldflags} ${xml2_ldflags} ${kmf_ldflags} ${mysql_ldflags} ${pg_ldflags}"
+		my_ldflags="-static ${openssl_ldflags} ${composite_ldflags} ${ldap_ldflags} ${xml2_ldflags} ${kmf_ldflags} ${mysql_ldflags} ${pg_ldflags}"
 		my_ldadd="${sys_ldadd} ${openssl_ldadd} ${composite_ldadd} ${xml2_ldadd} ${kmf_ldadd} ${mysql_ldadd} ${pg_ldadd} ${ldap_ldadd} ${resolv_ldadd} ${sys_ldadd}"
 		test_libs="-static ${sys_ldadd} src/.libs/libpki.a"
 	else
@@ -1642,7 +1652,7 @@ for dir in $c_dirs ; do
     has_dir=`echo $my_cflags | grep "I${dir} "`
     if ! [[ "x$has_dir" = "x" ]] ; then
       my_cflags=`echo "$my_cflags" | sed -e "s|-I${dir} ||g"`
-      my_cflags="-I${dir} $my_cflags"
+      my_cflags="$my_cflags -I${dir}"
     	AC_MSG_RESULT([Removed duplicate entries for -I${dir} from my_cflags])
     fi
   fi
--- old/acinclude.m4	2022-10-12 15:24:34.987179388 +0200
+++ new/acinclude.m4	2023-01-17 09:48:19.440241584 +0100
@@ -542,7 +542,7 @@ dnl 	fi
 dnl fi
 dnl ])
 
-dnl AC_RUN_IFELSE( [
+dnl AC_RUN_IFELSE([AC_LANG_SOURCE([
 dnl #include <openssl/ec.h>
 dnl #include <openssl/ecdsa.h>
 dnl #include <openssl/opensslconf.h>
@@ -553,7 +553,7 @@ dnl -garbage!
 dnl #endif
 dnl 	EC_KEY *d = NULL;
 dnl 	return(0);
-dnl }], [ 
+dnl }])], [ 
 dnl 	AC_DEFINE([ENABLE_ECDSA], 1, [ECC Support for OpenSSL])
 dnl 	activate_ecdsa=yes
 dnl ], [activate_ecdsa=no])
--- old/src/scripts/libpki-config.in	2023-01-16 10:28:51.214079538 +0100
+++ new/src/scripts/libpki-config.in	2023-01-16 10:29:38.955647748 +0100
@@ -70,11 +70,11 @@ while test $# -gt 0; do
        	;;
 
     --ldlibs)
-       	echo @rpath@ @my_ldflags@ -L@libdir@ @my_ldadd@
+       	echo @rpath@ @my_ldflags@ @my_ldadd@
        	;;
 
     --libs)
-       	echo @rpath@ @libpki_ldflags@ -L@libdir@ -lpki @libpki_ldadd@
+       	echo @rpath@ @libpki_ldflags@ -lpki @libpki_ldadd@
        	;;
 
     *)
