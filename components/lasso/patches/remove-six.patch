Remove six library from scripts used during the lasso build.

Not intended for upstream.

--- lasso-2.8.2/lasso/extract_symbols.py
+++ lasso-2.8.2/lasso/extract_symbols.py
@@ -4,7 +4,6 @@ import io
 import glob
 import re
 import sys
-import six
 
 if len(sys.argv) == 2:
     srcdir = sys.argv[1]
@@ -20,5 +19,5 @@ for header_file in glob.glob('%s/*/*.h'
     symbols.extend(regex.findall(io.open(header_file, encoding='utf-8').read().replace('\\\n', '')))
 
 for s in symbols:
-    six.print_(s)
+    print(s)
 
--- lasso-2.8.2/lasso/extract_types.py
+++ lasso-2.8.2/lasso/extract_types.py
@@ -4,7 +4,6 @@ import io
 import glob
 import re
 import sys
-import six
 
 if len(sys.argv) == 2:
     srcdir = sys.argv[1]
@@ -14,10 +13,10 @@ else:
 
 fd = io.StringIO()
 
-six.print_(u"/* This file has been autogenerated; changes will be lost */", file=fd)
-six.print_(u"", file=fd)
-six.print_(u"typedef GType (*type_function) ();", file=fd)
-six.print_(u"", file=fd)
+print(u"/* This file has been autogenerated; changes will be lost */", file=fd)
+print(u"", file=fd)
+print(u"typedef GType (*type_function) ();", file=fd)
+print(u"", file=fd)
 
 header_files = []
 for header_file in sorted(glob.glob('%s/*/*.h' % srcdir) + glob.glob('%s/*/*/*.h' % srcdir)):
@@ -27,17 +26,17 @@ for header_file in sorted(glob.glob('%s/
         type = re.findall('lasso_.*get_type', io.open(header_file, encoding='utf-8').read())[0]
     except IndexError:
         continue
-    six.print_("extern GType %s();" % type, file=fd)
+    print("extern GType %s();" % type, file=fd)
 
-six.print_(u"", file=fd)
-six.print_(u"type_function functions[] = {", file=fd)
+print(u"", file=fd)
+print(u"type_function functions[] = {", file=fd)
 for header_file in header_files:
     try:
         type = re.findall('lasso_.*get_type', io.open(header_file, encoding='utf-8').read())[0]
     except IndexError:
         continue
-    six.print_(u"\t%s," % type, file=fd)
-six.print_(u"\tNULL", file=fd)
-six.print_(u"};", file=fd)
+    print(u"\t%s," % type, file=fd)
+print(u"\tNULL", file=fd)
+print(u"};", file=fd)
 
 io.open('types.c', 'w', encoding='utf-8').write(fd.getvalue())
