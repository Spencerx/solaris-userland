It is common mistake in linking to put flags for new library past to
common flags so standard library is referenced first.

Pull request
https://github.com/curl/curl/pull/9045
sent to community.

--- a/m4/curl-openssl.m4	2024-09-11 07:37:35.000000000 +0200
+++ b/m4/curl-openssl.m4	2024-12-11 22:01:14.331160048 +0100
@@ -138,9 +138,9 @@
   fi
 
   dnl finally, set flags to use SSL
-  CPPFLAGS="$CPPFLAGS $SSL_CPPFLAGS"
-  LDFLAGS="$LDFLAGS $SSL_LDFLAGS"
-  LDFLAGSPC="$LDFLAGSPC $SSL_LDFLAGS"
+  CPPFLAGS="$SSL_CPPFLAGS $CPPFLAGS"
+  LDFLAGS="$SSL_LDFLAGS $LDFLAGS"
+  LDFLAGSPC="$SSL_LDFLAGS $LDFLAGSPC"
 
   AC_CHECK_LIB(crypto, HMAC_Update,[
     HAVECRYPTO="yes"
@@ -344,7 +344,7 @@
       dnl linker doesn't search through, we need to add it to CURL_LIBRARY_PATH
       dnl to prevent further configure tests to fail due to this
       if test "x$cross_compiling" != "xyes"; then
-        CURL_LIBRARY_PATH="$CURL_LIBRARY_PATH:$LIB_OPENSSL"
+        CURL_LIBRARY_PATH="$LIB_OPENSSL:$CURL_LIBRARY_PATH"
         export CURL_LIBRARY_PATH
         AC_MSG_NOTICE([Added $LIB_OPENSSL to CURL_LIBRARY_PATH])
       fi
