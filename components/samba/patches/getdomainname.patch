Solaris provides the NIS getdomainname() function in libc (previously libnsl),
but has never provided a prototype for it in any system header file, so this
is needed to avoid gcc 14 build errors of the form:

../../source3/auth/user_util.c: In function 'user_in_netgroup':
../../source3/auth/user_util.c:143:13: error: implicit declaration of
 function 'getdomainname' [-Wimplicit-function-declaration]
  143 |         if (getdomainname(nis_domain_buf, sizeof(nis_domain_buf)) == 0) {
      |             ^~~~~~~~~~~~~


--- samba-4.19.8/lib/util/access.c	2023-07-18 01:14:54.514091300 -0700
+++ samba-4.19.8/lib/util/access.c	2024-10-06 16:48:42.273682639 -0700
@@ -23,6 +23,11 @@
 #include "lib/util/unix_match.h"
 #include "lib/util/smb_strtox.h"
 
+#if defined(HAVE_NETGROUP) && defined(HAVE_INNETGR) && defined(SUNOS5)
+/* defined in libc, but not in any public headers on Solaris */
+extern int getdomainname(char *, int);
+#endif
+
 #define NAME_INDEX 0
 #define ADDR_INDEX 1
 
--- samba-4.19.8/source3/auth/user_util.c	2023-07-18 01:14:54.702092400 -0700
+++ samba-4.19.8/source3/auth/user_util.c	2024-10-06 16:56:46.420122865 -0700
@@ -24,6 +24,11 @@
 #include "auth.h"
 #include "lib/gencache.h"
 
+#if defined(HAVE_NETGROUP) && defined(HAVE_INNETGR) && defined(SUNOS5)
+/* defined in libc, but not in any public headers on Solaris */
+extern int getdomainname(char *, int);
+#endif
+
 /*******************************************************************
  Map a username from a dos name to a unix name by looking in the username
  map. Note that this modifies the name in place.
