various changes to comply with Oracle internal rules
do not deliver examples, use secure ciphers by default, use tls by default
not suitable for upstream

--- sudo-1.9.15p2/Makefile.in
+++ sudo-1.9.15p2/Makefile.in
@@ -62,7 +62,7 @@ plugins/audit_json plugins/group_file pl
 	  plugins/system_group @PYTHON_PLUGIN_SRC@ src include \
 	  docs examples
 
-SAMPLES = plugins/sample plugins/sample_approval
+#SAMPLES = plugins/sample plugins/sample_approval
 
 VERSION = @PACKAGE_VERSION@
 PACKAGE_TARNAME = @PACKAGE_TARNAME@
--- sudo-1.9.15p2/docs/sudo_logsrvd.conf.man.in
+++ sudo-1.9.15p2/docs/sudo_logsrvd.conf.man.in
@@ -216,7 +216,7 @@ section in
 openssl-ciphers(1)
 for full details.
 The default value is
-\(lqHIGH:!aNULL\(rq
+\(lqHIGH:!aNULL!eNULL:!MD5:!DES:!RC4:!3DES:!PSK:!SHA1:!SHA256:!SHA384\(rq
 which consists of encryption cipher suites with key lengths larger than
 128 bits, and some cipher suites with 128-bit keys.
 Cipher suites that offer no authentication are excluded.
--- sudo-1.9.15p2/examples/sudo_logsrvd.conf.in
+++ sudo-1.9.15p2/examples/sudo_logsrvd.conf.in
@@ -37,29 +37,29 @@ #timeout = 30
 
 # If true, the server will validate its own certificate at startup.
 # Defaults to true.
-#tls_verify = true
+tls_verify = true
 
 # If true, client certificates will be validated by the server;
 # clients without a valid certificate will be unable to connect.
 # By default, client certs are not checked.
-#tls_checkpeer = false
+tls_checkpeer = true
 
 # Path to a certificate authority bundle file in PEM format to use
 # instead of the system's default certificate authority database.
-#tls_cacert = /etc/ssl/sudo/cacert.pem
+tls_cacert = /etc/certs/localhost/host-ca/hostca.crt
 
 # Path to the server's certificate file in PEM format.
 # Required for TLS connections.
-#tls_cert = /etc/ssl/sudo/certs/logsrvd_cert.pem
+tls_cert = /etc/certs/localhost/host.crt
 
 # Path to the server's private key file in PEM format.
 # Required for TLS connections.
-#tls_key = /etc/ssl/sudo/private/logsrvd_key.pem
+tls_key = /etc/certs/localhost/host.key
 
 # TLS cipher list (see "CIPHER LIST FORMAT" in the openssl-ciphers manual).
 # This setting is only effective if the negotiated protocol is TLS version
-# 1.2.  The default cipher list is HIGH:!aNULL.
-#tls_ciphers_v12 = HIGH:!aNULL
+# 1.2.  The default cipher list is HIGH:!aNULL:!eNULL:!MD5:!DES:!RC4:!3DES:!PSK:!SHA1:!SHA256:!SHA384.
+tls_ciphers_v12 = HIGH:!aNULL:!eNULL:!MD5:!DES:!RC4:!3DES:!PSK:!SHA1:!SHA256:!SHA384
 
 # TLS cipher list if the negotiated protocol is TLS version 1.3.
 # The default cipher list is TLS_AES_256_GCM_SHA384.
@@ -108,29 +108,29 @@ #timeout = 30
 
 # If true, the server's relay certificate will be verified at startup.
 # The default is to use the value in the [server] section.
-#tls_verify = true
+tls_verify = true
 
 # Whether to verify the relay's certificate for TLS connections.
 # The default is to use the value in the [server] section.
-#tls_checkpeer = false
+tls_checkpeer = true
 
 # Path to a certificate authority bundle file in PEM format to use
 # instead of the system's default certificate authority database.
 # The default is to use the value in the [server] section.
-#tls_cacert = /etc/ssl/sudo/cacert.pem
+tls_cacert = /etc/certs/localhost/host-ca/hostca.crt
 
 # Path to the server's certificate file in PEM format.
 # The default is to use the certificate in the [server] section.
-#tls_cert = /etc/ssl/sudo/certs/logsrvd_cert.pem
+tls_cert = /etc/certs/localhost/host.crt
 
 # Path to the server's private key file in PEM format.
 # The default is to use the key in the [server] section.
-#tls_key = /etc/ssl/sudo/private/logsrvd_key.pem
+tls_key = /etc/certs/localhost/host.key
 
 # TLS cipher list (see "CIPHER LIST FORMAT" in the openssl-ciphers manual).
 # this setting is only effective if the negotiated protocol is TLS version
 # 1.2.  The default is to use the value in the [server] section.
-#tls_ciphers_v12 = HIGH:!aNULL
+tls_ciphers_v12 = HIGH:!aNULL:!eNULL:!MD5:!DES:!RC4:!3DES:!PSK:!SHA1:!SHA256:!SHA384
 
 # TLS cipher list if the negotiated protocol is TLS version 1.3.
 # The default is to use the value in the [server] section.
--- sudo-1.9.15p2/logsrvd/logsrvd_conf.c
+++ sudo-1.9.15p2/logsrvd/logsrvd_conf.c
@@ -63,9 +63,9 @@ #include <sudo_util.h>
 #include <logsrvd.h>
 
 #if defined(HAVE_OPENSSL)
-# define DEFAULT_CA_CERT_PATH       "/etc/ssl/sudo/cacert.pem"
-# define DEFAULT_SERVER_CERT_PATH   "/etc/ssl/sudo/certs/logsrvd_cert.pem"
-# define DEFAULT_SERVER_KEY_PATH    "/etc/ssl/sudo/private/logsrvd_key.pem"
+# define DEFAULT_CA_CERT_PATH       "/etc/certs/localhost/host-ca/hostca.crt"
+# define DEFAULT_SERVER_CERT_PATH   "/etc/certs/localhost/host.crt"
+# define DEFAULT_SERVER_KEY_PATH    "/etc/certs/localhost/host.key"
 
 /* Evaluates to true if at least one TLS field is set, else false. */
 # define TLS_CONFIGURED(_s)						\
--- sudo-1.9.15p2/logsrvd/tls_init.c
+++ sudo-1.9.15p2/logsrvd/tls_init.c
@@ -48,7 +48,7 @@ #include <sudo_gettext.h>
 #include <tls_common.h>
 #include <hostcheck.h>
 
-#define DEFAULT_CIPHER_LST12 "HIGH:!aNULL"
+#define DEFAULT_CIPHER_LST12 "HIGH:!aNULL:!eNULL:!MD5:!DES:!RC4:!3DES:!PSK:!SHA1:!SHA256:!SHA384"
 #define DEFAULT_CIPHER_LST13 "TLS_AES_256_GCM_SHA384"
 
 #if defined(HAVE_OPENSSL)
