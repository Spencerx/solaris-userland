This is currently unrevied upstream fix for:

Fix emitter states handling when write_indicator fails #290 

There are cases where yaml_emitter_write_indicator fails.
In that case POP is called on emitter->indents but not on emitter->states,
which results in a leftover event in the stack, and later POP is called
on an empty emitter->indents stack.

This commit does not fix the case of the failing yaml_emitter_write_indicator.
This is still investigated.

This will mitigate CVE-2024-3205.

--- a/src/emitter.c.orig	2024-04-16 09:36:08.206730984 +0200
+++ b/src/emitter.c	2024-04-16 09:35:50.262958178 +0200
@@ -760,13 +760,19 @@
         emitter->flow_level --;
         emitter->indent = POP(emitter, emitter->indents);
         if (emitter->canonical && !first) {
-            if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0))
+            if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0)) {
+                emitter->state = POP(emitter, emitter->states);
                 return 0;
-            if (!yaml_emitter_write_indent(emitter))
+            }
+            if (!yaml_emitter_write_indent(emitter)) {
+                emitter->state = POP(emitter, emitter->states);
                 return 0;
+            }
         }
-        if (!yaml_emitter_write_indicator(emitter, "]", 0, 0, 0))
+        if (!yaml_emitter_write_indicator(emitter, "]", 0, 0, 0)) {
+            emitter->state = POP(emitter, emitter->states);
             return 0;
+        }
         emitter->state = POP(emitter, emitter->states);
 
         return 1;
@@ -809,13 +815,19 @@
         emitter->flow_level --;
         emitter->indent = POP(emitter, emitter->indents);
         if (emitter->canonical && !first) {
-            if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0))
+            if (!yaml_emitter_write_indicator(emitter, ",", 0, 0, 0)) {
+                emitter->state = POP(emitter, emitter->states);
                 return 0;
-            if (!yaml_emitter_write_indent(emitter))
+            }
+            if (!yaml_emitter_write_indent(emitter)) {
+                emitter->state = POP(emitter, emitter->states);
                 return 0;
+            }
         }
-        if (!yaml_emitter_write_indicator(emitter, "}", 0, 0, 0))
+        if (!yaml_emitter_write_indicator(emitter, "}", 0, 0, 0)) {
+            emitter->state = POP(emitter, emitter->states);
             return 0;
+        }
         emitter->state = POP(emitter, emitter->states);
 
         return 1;
