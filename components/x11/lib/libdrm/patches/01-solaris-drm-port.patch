
Existing set of patches from the X gate

--- a/xf86drm.h	2024-05-22 22:57:23.409391452 +0000
+++ b/xf86drm.h	2024-05-22 22:58:21.403029004 +0000
@@ -507,6 +507,18 @@
 #endif /* architecture */
 #endif /* __GNUC__ >= 2 */
 
+#if defined(__SUNPRO_C)
+#include <atomic.h>
+#define atomic_cmpset_int(p, c, n) ((c == atomic_cas_uint(p, c, n)) ? 1 : 0)
+#define DRM_CAS(lock,old,new,__ret)          \
+               do {                          \
+                                       unsigned int __result, __old = (old);\
+                                       __result = !atomic_cmpset_int(lock,__old,new);\
+                                       __ret = __result;          \
+                               } while(0)
+#endif
+
+
 #ifndef DRM_CAS
 #define DRM_CAS(lock,old,new,ret) do { ret=1; } while (0) /* FAST LOCK FAILS */
 #endif
--- a/xf86drmMode.c	2024-05-22 22:58:37.595928931 +0000
+++ b/xf86drmMode.c	2024-05-22 22:59:36.986482716 +0000
@@ -994,7 +994,9 @@
 	drmClose(fd);
 	return 0;
 #endif
-	return -ENOSYS;
+
+/* for now return 0 on solaris */
+        return 0;
 }
 
 drm_public int drmModeCrtcGetGamma(int fd, uint32_t crtc_id, uint32_t size,
--- a/xf86drm.c	2024-05-29 09:07:06.993471290 -0700
+++ b/xf86drm.c	2024-05-29 09:07:39.327646797 -0700
@@ -1641,7 +1641,7 @@
     drm_map_t map;
 
     memclear(map);
-    map.handle = (void *)(uintptr_t)handle;
+    map.handle = (drm_handle_t)(uintptr_t)handle;
 
     if(drmIoctl(fd, DRM_IOCTL_RM_MAP, &map))
         return -errno;
