Jaraco functools are not available on Solaris yet, but those two functions
can be very easily moved directly into tempora.

Not suitable for upstream.

--- tempora-5.8.0/tempora/timing.py
+++ tempora-5.8.0/tempora/timing.py
@@ -9,7 +9,18 @@ import time
 from types import TracebackType
 from typing import TYPE_CHECKING
 
-import jaraco.functools
+
+def save_method_args(method):
+    args_and_kwargs = collections.namedtuple('args_and_kwargs', 'args kwargs')
+
+    @functools.wraps(method)
+    def wrapper(self, *args, **kwargs):
+        attr_name = '_saved_' + method.__name__
+        attr = args_and_kwargs(args, kwargs)
+        setattr(self, attr_name, attr)
+        return method(self, *args, **kwargs)
+
+    return wrapper
 
 if TYPE_CHECKING:
     from typing_extensions import Self
@@ -238,7 +249,7 @@ class BackoffDelay(collections.abc.Itera
     jitter: collections.abc.Callable[[], float]
     "Callable returning extra seconds to add to delay"
 
-    @jaraco.functools.save_method_args
+    @save_method_args
     def __init__(
         self,
         delay: float = 0,
--- tempora-5.8.0/pyproject.toml
+++ tempora-5.8.0/pyproject.toml
@@ -18,7 +18,6 @@ classifiers = [
 ]
 requires-python = ">=3.9"
 dependencies = [
-	"jaraco.functools>=1.20",
 	"python-dateutil",
 ]
 dynamic = ["version"]
