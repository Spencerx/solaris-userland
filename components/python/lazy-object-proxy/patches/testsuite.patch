Because pytest-benchmark is not available in Solaris, tests using it are skipped.

--- lazy-object-proxy-1.10.0/pytest.ini
+++ lazy-object-proxy-1.10.0/pytest.ini
@@ -20,7 +20,6 @@ markers =
     xfail_simple: Expected test to fail on the `simple` implementation.
 addopts =
     -ra
-    --strict-markers
     --ignore=docs/conf.py
     --ignore=setup.py
     --ignore=ci
--- lazy-object-proxy-1.10.0/tests/test_lazy_object_proxy.py
+++ lazy-object-proxy-1.10.0/tests/test_lazy_object_proxy.py
@@ -1801,6 +1801,7 @@ def test_garbage_collection_count(lop):
     assert count == sys.getrefcount(obj)
 
 
+@pytest.mark.skip("pytest-benchmark is not available on Solaris")
 @pytest.mark.parametrize('name', ['slots', 'cext', 'simple', 'django', 'objproxies'])
 def test_perf(benchmark, name, lop_loader):
     implementation = lop_loader(name)
@@ -1874,7 +1875,7 @@ def prototype(request):
         return LocalsCachedPropertyProxy
 
 
-@pytest.mark.benchmark(group='prototypes')
+@pytest.mark.skip("pytest-benchmark is not available on Solaris")
 def test_proto(benchmark, prototype):
     obj = 'foobar'
     proxied = prototype(lambda: obj)
