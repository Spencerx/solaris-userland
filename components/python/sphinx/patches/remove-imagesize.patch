Imagesize is a small python module for getting sizes of given images. It
doesn't seem to be maintained much and considering that we can get the
same functionality with the already integrated Pillow, we can safely
remove this dependency.

Not intended for upstream.

--- Sphinx-6.1.3/PKG-INFO
+++ Sphinx-6.1.3/PKG-INFO
@@ -47,7 +47,6 @@ Requires-Dist: docutils>=0.18,<0.20
 Requires-Dist: snowballstemmer>=2.0
 Requires-Dist: babel>=2.9
 Requires-Dist: alabaster>=0.7,<0.8
-Requires-Dist: imagesize>=1.3
 Requires-Dist: requests>=2.25.0
 Requires-Dist: packaging>=21.0
 Requires-Dist: importlib-metadata>=4.8; python_version < '3.10'
--- Sphinx-6.1.3/pyproject.toml
+++ Sphinx-6.1.3/pyproject.toml
@@ -61,7 +61,6 @@ dependencies = [
     "snowballstemmer>=2.0",
     "babel>=2.9",
     "alabaster>=0.7,<0.8",
-    "imagesize>=1.3",
     "requests>=2.25.0",
     "packaging>=21.0",
     "importlib-metadata>=4.8; python_version < '3.10'",
--- Sphinx-6.1.3/sphinx/util/images.py
+++ Sphinx-6.1.3/sphinx/util/images.py
@@ -8,8 +8,6 @@ from collections import OrderedDict
 from os import path
 from typing import IO, BinaryIO, NamedTuple
 
-import imagesize
-
 try:
     from PIL import Image
 except ImportError:
@@ -34,17 +32,10 @@ class DataURI(NamedTuple):
 
 def get_image_size(filename: str) -> tuple[int, int] | None:
     try:
-        size = imagesize.get(filename)
-        if size[0] == -1:
-            size = None
-        elif isinstance(size[0], float) or isinstance(size[1], float):
-            size = (int(size[0]), int(size[1]))
-
-        if size is None and Image:  # fallback to Pillow
+        if Image:
             with Image.open(filename) as im:
-                size = im.size
-
-        return size
+                return im.size
+        return None
     except Exception:
         return None
 
