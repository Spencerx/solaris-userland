Imagesize is a small python module for getting sizes of given images. It
doesn't seem to be maintained much and considering that we can get the
same functionality with the already integrated Pillow, we can safely
remove this dependency.

Not intended for upstream.

--- sphinx-8.2.0/PKG-INFO
+++ sphinx-8.2.0/PKG-INFO
@@ -56,7 +56,6 @@ Requires-Dist: docutils>=0.20,<0.22
 Requires-Dist: snowballstemmer>=2.2
 Requires-Dist: babel>=2.13
 Requires-Dist: alabaster>=0.7.14
-Requires-Dist: imagesize>=1.3
 Requires-Dist: requests>=2.30.0
 Requires-Dist: roman-numerals-py>=1.0.0
 Requires-Dist: packaging>=23.0
--- sphinx-8.2.0/pyproject.toml
+++ sphinx-8.2.0/pyproject.toml
@@ -71,7 +71,6 @@ dependencies = [
     "snowballstemmer>=2.2",
     "babel>=2.13",
     "alabaster>=0.7.14",
-    "imagesize>=1.3",
     "requests>=2.30.0",
     "roman-numerals-py>=1.0.0",
     "packaging>=23.0",
--- sphinx-8.2.0/sphinx/util/images.py
+++ sphinx-8.2.0/sphinx/util/images.py
@@ -6,8 +6,6 @@ import base64
 from pathlib import Path
 from typing import TYPE_CHECKING, NamedTuple, overload
 
-import imagesize
-
 if TYPE_CHECKING:
     from os import PathLike
 
@@ -40,17 +38,10 @@ class DataURI(NamedTuple):
 def get_image_size(filename: str | PathLike[str]) -> tuple[int, int] | None:
     filename = Path(filename)
     try:
-        size = imagesize.get(filename)
-        if size[0] == -1:
-            size = None
-        elif isinstance(size[0], float) or isinstance(size[1], float):
-            size = (int(size[0]), int(size[1]))
-
-        if size is None and PILLOW_AVAILABLE:  # fallback to Pillow
+        if PILLOW_AVAILABLE:
             with Image.open(filename) as im:
-                size = im.size
-
-        return size
+                return im.size
+        return None
     except Exception:
         return None
 
