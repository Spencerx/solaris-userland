This patch removes several 1st party extensions (documentation builders) that
are currently not needed for our internal use.

'sphinxcontrib.applehelp' - produces an Apple Help Book output.
'sphinxcontrib.htmlhelp' - HTML Help support files for Microsoft HTML Help Workshop.
'sphinxcontrib.serializinghtml' - implements the Python serialization API (pickle, simplejson, phpserialize, and others).
'sphinxcontrib.qthelp' - support files for the Qt collection generator.
'sphinxcontrib.devhelp' - GNOME Devhelp support.

Additionally, there is a jsmath, which renders display math in HTML via JavaScript. I don't know if we need this...

Each of these extensions is delivered as a separate component and removing them
makes the Sphinx dependency tree much simpler.

Details about builders here:
https://www.sphinx-doc.org/en/master/usage/builders/index.html

--- Sphinx-6.1.3/sphinx/application.py
+++ Sphinx-6.1.3/sphinx/application.py
@@ -99,15 +99,18 @@ builtin_extensions = (
     'sphinx.environment.collectors.metadata',
     'sphinx.environment.collectors.title',
     'sphinx.environment.collectors.toctree',
+    # Strictly, alabaster theme is not a builtin extension,
+    # but it is loaded automatically to use it as default theme.
+    'alabaster',
+)
+
+builtin_extensions_optional = (
     # 1st party extensions
     'sphinxcontrib.applehelp',
     'sphinxcontrib.devhelp',
     'sphinxcontrib.htmlhelp',
     'sphinxcontrib.serializinghtml',
     'sphinxcontrib.qthelp',
-    # Strictly, alabaster theme is not a builtin extension,
-    # but it is loaded automatically to use it as default theme.
-    'alabaster',
 )
 
 ENV_PICKLE_FILENAME = 'environment.pickle'
@@ -218,6 +221,13 @@ class Sphinx:
         for extension in builtin_extensions:
             self.setup_extension(extension)
 
+        # load all optional built-in extension modules
+        for extension in builtin_extensions_optional:
+            try:
+                self.setup_extension(extension)
+            except sphinx.errors.ExtensionError:
+                pass
+
         # load all user-given extension modules
         for extension in self.config.extensions:
             self.setup_extension(extension)
--- Sphinx-6.1.3/PKG-INFO
+++ Sphinx-6.1.3/PKG-INFO
@@ -41,12 +41,6 @@ Classifier: Topic :: Text Processing ::
 Classifier: Topic :: Text Processing :: Markup :: HTML
 Classifier: Topic :: Text Processing :: Markup :: LaTeX
 Classifier: Topic :: Utilities
-Requires-Dist: sphinxcontrib-applehelp
-Requires-Dist: sphinxcontrib-devhelp
-Requires-Dist: sphinxcontrib-jsmath
-Requires-Dist: sphinxcontrib-htmlhelp>=2.0.0
-Requires-Dist: sphinxcontrib-serializinghtml>=1.1.5
-Requires-Dist: sphinxcontrib-qthelp
 Requires-Dist: Jinja2>=3.0
 Requires-Dist: Pygments>=2.13
 Requires-Dist: docutils>=0.18,<0.20
--- Sphinx-6.1.3/pyproject.toml
+++ Sphinx-6.1.3/pyproject.toml
@@ -55,12 +55,6 @@ classifiers = [
     "Topic :: Utilities",
 ]
 dependencies = [
-    "sphinxcontrib-applehelp",
-    "sphinxcontrib-devhelp",
-    "sphinxcontrib-jsmath",
-    "sphinxcontrib-htmlhelp>=2.0.0",
-    "sphinxcontrib-serializinghtml>=1.1.5",
-    "sphinxcontrib-qthelp",
     "Jinja2>=3.0",
     "Pygments>=2.13",
     "docutils>=0.18,<0.20",
--- Sphinx-6.1.3/sphinx/builders/html/__init__.py
+++ Sphinx-6.1.3/sphinx/builders/html/__init__.py
@@ -1323,7 +1323,10 @@ def deprecate_html_4(_app: Sphinx, confi
 
 
 # for compatibility
-import sphinxcontrib.serializinghtml  # noqa: E402,F401
+try:
+    import sphinxcontrib.serializinghtml  # noqa: E402,F401
+except:
+    pass
 
 import sphinx.builders.dirhtml  # noqa: E402,F401,RUF100
 import sphinx.builders.singlehtml  # noqa: E402,F401
--- Sphinx-6.1.3/tests/test_api_translator.py
+++ Sphinx-6.1.3/tests/test_api_translator.py
@@ -36,6 +36,7 @@ def test_singlehtml_set_translator_for_s
     assert translator_class.__name__ == 'ConfSingleHTMLTranslator'
 
 
+@pytest.mark.skip(reason='sphinxcontrib.serializinghtml is not available on Solaris')
 @pytest.mark.sphinx('pickle', testroot='api-set-translator')
 def test_pickle_set_translator_for_pickle(app, status, warning):
     translator_class = app.builder.get_translator_class()
@@ -43,6 +44,7 @@ def test_pickle_set_translator_for_pickl
     assert translator_class.__name__ == 'ConfPickleTranslator'
 
 
+@pytest.mark.skip(reason='sphinxcontrib.serializinghtml is not available on Solaris')
 @pytest.mark.sphinx('json', testroot='api-set-translator')
 def test_json_set_translator_for_json(app, status, warning):
     translator_class = app.builder.get_translator_class()
