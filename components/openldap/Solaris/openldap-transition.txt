Copyright (c) 2023, Oracle and/or its affiliates.
Copyright 1998-2022 The OpenLDAP Foundation

         __________________________________________________

           REQUIREMENTS TO TRANSITION FROM ONE VERSION OF
      		  OPENLDAP TO ANOTHER.
         __________________________________________________

*Only required if the system is being used as an OpenLDAP server.*

Ordinarily a system is being used as an OpenLDAP server when SMF service
instance ldap/server:openldap is enabled and online.

- The `svcs(1)' command will tell you the service status:

        svcs ldap/server

The OpenLDAP package has been updated to include a newer version of
OpenLDAP which must be manually migrated to.

To transition from one version of OpenLDAP to the next it is imperative
that databases are exported to LDAP Data Interchange Format (LDIF) and
imported following the upgrade.  This is a manual procedure and needs to
be completed by a systems administrator before booting into the new boot
environment.


The following sections attempt to document the steps you will need to
take in order to upgrade.


------------------------------------------------------------------------

      *READ ALL OF THESE INSTRUCTIONS CAREFULLY*

      *BEFORE TAKING ACTION ON ANY STEPS BELOW*

------------------------------------------------------------------------


1 Migration
===========

  - Reference <https://www.openldap.org/doc/admin26/maintenance.html>


  a) Quiesce the service of writes, for example by disabling it:

           svcadm disable -s ldap/server:openldap

  b) Dump each database to LDIF file using slapcat(8) to a location
     where it will be accessible from different boot environments.

           mkdir -p /var/share/openldap
           slapcat -n 1 -l /var/share/openldap/data1.ldif

  c) Dump slapd-config(5) configuration to LDIF file

     ldapservercfg(8) configures slapd(8) using slapd-config(5) and
     therefore the *config database* should be exported in preparation
     for any configuration changes that may be necessary.

     You can skip this step if your configuration is using
     slapd.conf(5).

           slapcat -n 0 -o ldif-wrap=no -l /var/share/openldap/conf.ldif

  d) Boot into new boot environment when ready

     *Read and understand the rest of this document first*

           reboot

     Upon reboot the ldap/server:openldap service may be in maintenance
     mode if the versions are not compatible.

  e) Apply any Version Specific Instructions

     *Further details are given below*

  f) Import LDIF configuration as necessary

     If configuration changes were needed import the
     slpad-config(5oldap) LDIF file.

     *Warning* this example destroys the current configuration, while
     the LDIF file created previously is a backup you may want to make
     sure you have an alternative backup too.

     Execute from a directory accessible to "openldap" to prevent
     non-toxic (getcwd) error from slapadd.

           IMPORT=/var/share/openldap/import.ldif
           rm -rf /etc/openldap/slapd.d/*
           cd /tmp
           su openldap -c "slapadd -F /etc/openldap/slapd.d -n 0 -l $IMPORT"

  g) Remove old database in /var/openldap/openldap-data

           rm -rf /var/openldap/openldap-data/*

  h) Import LDIF data

     Use slapadd(8oldap) as user "openldap" to import each of the
     previously saved data files.  Execute from a directory accessible
     to "openldap" to prevent non-toxic (getcwd) error from slapadd.

           cd /tmp
           su openldap -c "slapadd -l /var/share/openldap/data1.ldif"

  i) Enable ldap/server:openldap

           svcadm enable -s ldap/server:openldap

     If the service had previously entered into maitenance because the
     old databases had not been removed then it may be necessary to
     clear the maintenance condition.

           svcadm clear ldap/server:openldap

  j) Check ldap/server:openldap status and log as necessary

           svcs ldap/server:openldap
           svcs -Lv ldap/server:openldap


  ----------------------------------------------------------------------


2 Version Specific Instructions
===============================

  These depend on the version you are updating from.  You can check the
  current version using the command `/usr/bin/ldapsearch -VV'


2.1 From 2.4.44 through 2.4.59 to 2.6.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  - For section "e" above read:


  The following sections attempt to document the steps you will need to
  take in order to upgrade to OpenLDAP 2.6 which require changes
  necessary for 2.5 as well as those for 2.6 as referenced in the
  OpenLDAP Administration Upgrading appendixes and quoted below:
  - <https://www.openldap.org/doc/admin25/appendix-upgrading.html>
  - <https://www.openldap.org/doc/admin26/appendix-upgrading.html>


2.1.1 cn=config olc* attributes
-------------------------------

  - Quote from: OpenLDAP 2.5 Admin Guide Appendix B.1.:
          The olcMirrorMode attribute has been renamed to
          olcMultiProvider.  Existing configurations will continue
          to work with the old parameter name, but it is advised
          to update to the new name as a part of the upgrade
          process.


  slapd.conf also changes `mirrormode' for `multiprovider'


2.1.2 ppolicy overlay
---------------------

  - Quote from: OpenLDAP 2.5 Admin Guide Appendix B.2.:
          The overlay now implements version 10 of the ppolicy
          draft in full. This includes the notion of a password
          administrator where applicable (as determined by having
          a manage permission to the userPassword attribute) and
          skips certain processing when there is no valid policy
          in effect or where the operation is initiated by a
          password administrator.  Many attributes are now tagged
          with NO-USER-MODIFICATION in the schema, requiring the
          use of relax control to modify them.

          In OpenLDAP 2.4 the slapo-ppolicy(5) overlay relied on a
          separate schema file to be included for it to
          function. This schema is now implemented internally in
          the slapo-ppolicy module. When upgrading slapd.conf(5)
          deployments the include statement for the schema must be
          removed. For slapd-config(5) deployments, the config
          database must be exported via slapcat and the old
          ppolicy schema removed from the export. The resulting
          config database [LDIF] can then be imported.


  *Solaris considerations for ppolicy*

  `ldapservercfg' configures `slapd' using `slapd-config' and therefore
  the *config database* must be exported via `slapcat' and the old
  `ppolicy' schema removed from the export.  The resulting configuration
  LDIF file can then be imported with `slapadd'.

  In the following example note that `ldif-wrap=no' is used to ensure
  the entries remain on one line ready for processing with a `nawk(1)'
  script.

  Stop LDAP service and export configuration to safe path where it can
  be imported from new boot environment:

        EXPORT=/var/share/openldap/config.ldif
        IMPORT=/var/share/openldap/import.ldif
        svcadm disable -s ldap/server:openldap
        slapcat -o ldif-wrap=no -n 0 -l $EXPORT

  Confirm the file exists as later steps will remove the database.

        file $EXPORT


2.1.2.1 Example script to remove ppolicy from config LDIF file

  Save this awk script to a file called no-ppolicy-schema.awk
  ----------------------------------------------------------------------
  #!/bin/nawk -f
  BEGIN {i=0;  # database index count.
    cn="";     # Matched DN name.
    ignore=0;  # Signifies lines being removed when 1.
   }
  /^$/ {ignore=0;print;next}  # Blank line separates records.
  ignore==1 {next;}  # record being removed.
  /dn: cn={[0-9]+}ppolicy,cn=schema,cn=config$/ {
          ignore=1; next;}  # ppolicy record found, ignore rest of record.
  /dn: cn={[0-9]+}.*,cn=schema,cn=config/ {
    # Other schema detected, adjust database number.
    match($0,"{[0-9]*}[^,]*")  # Find the common name.
    cn="^cn: " substr($0, RSTART, RLENGTH) "$";  # cn match string
    print substr($0,1,8) i"" substr($0,index($0,"}"));  # new index
    j=i;i++; next}  # j is current cn index, i is now the next index.
  cn != "" && $0 ~ cn {  # cn matched, write cn with new index.
    print substr($0,1,5) j"" substr($0,index($0,"}"));
    cn=""; next}
  {print}  # output all other lines unchanged.
  ----------------------------------------------------------------------

  Remove the ppolicy configuration from the exported configuration LDIF
  file using the commands:

        nawk -f no-ppolicy-schema.awk $EXPORT > $IMPORT
        echo DONE $?


2.1.2.1.1 Examine the resulting differences from awk changes

  For example using diff(1):
  diff -u $EXPORT $IMPORT

  The results should be similar to following example which for brevity
  has been truncated at the seventy-second column (using `cut -c 1-72'):

  --- /var/share/openldap/config.ldif 2023-05-12 10:42:30.712692430 +0000
  +++ /var/share/openldap/import.ldif 2023-05-12 11:18:27.633212895 +0000
  @@ -793,39 +793,10 @@
   modifiersName: cn=config
   modifyTimestamp: 20230511133509Z
 
  -dn: cn={3}ppolicy,cn=schema,cn=config
  -objectClass: olcSchemaConfig
  -cn: {3}ppolicy
  -olcAttributeTypes: {0}( 1.3.6.1.4.1.42.2.27.8.1.1 NAME 'pwdAttribute' E
  -olcAttributeTypes: {1}( 1.3.6.1.4.1.42.2.27.8.1.2 NAME 'pwdMinAge' EQUA
  -olcAttributeTypes: {2}( 1.3.6.1.4.1.42.2.27.8.1.3 NAME 'pwdMaxAge' EQUA
  -olcAttributeTypes: {3}( 1.3.6.1.4.1.42.2.27.8.1.4 NAME 'pwdInHistory' E
  -olcAttributeTypes: {4}( 1.3.6.1.4.1.42.2.27.8.1.5 NAME 'pwdCheckQuality
  -olcAttributeTypes: {5}( 1.3.6.1.4.1.42.2.27.8.1.6 NAME 'pwdMinLength' E
  -olcAttributeTypes: {6}( 1.3.6.1.4.1.42.2.27.8.1.7 NAME 'pwdExpireWarnin
  -olcAttributeTypes: {7}( 1.3.6.1.4.1.42.2.27.8.1.8 NAME 'pwdGraceAuthNLi
  -olcAttributeTypes: {8}( 1.3.6.1.4.1.42.2.27.8.1.9 NAME 'pwdLockout' EQU
  -olcAttributeTypes: {9}( 1.3.6.1.4.1.42.2.27.8.1.10 NAME 'pwdLockoutDura
  -olcAttributeTypes: {10}( 1.3.6.1.4.1.42.2.27.8.1.11 NAME 'pwdMaxFailure
  -olcAttributeTypes: {11}( 1.3.6.1.4.1.42.2.27.8.1.12 NAME 'pwdFailureCou
  -olcAttributeTypes: {12}( 1.3.6.1.4.1.42.2.27.8.1.13 NAME 'pwdMustChange
  -olcAttributeTypes: {13}( 1.3.6.1.4.1.42.2.27.8.1.14 NAME 'pwdAllowUserC
  -olcAttributeTypes: {14}( 1.3.6.1.4.1.42.2.27.8.1.15 NAME 'pwdSafeModify
  -olcAttributeTypes: {15}( 1.3.6.1.4.1.42.2.27.8.1.30 NAME 'pwdMaxRecorde
  -olcAttributeTypes: {16}( 1.3.6.1.4.1.4754.1.99.1 NAME 'pwdCheckModule'
  -olcObjectClasses: {0}( 1.3.6.1.4.1.4754.2.99.1 NAME 'pwdPolicyChecker'
  -olcObjectClasses: {1}( 1.3.6.1.4.1.42.2.27.8.2.1 NAME 'pwdPolicy' SUP t
  -structuralObjectClass: olcSchemaConfig
  -entryUUID: a20f57d7-3721-49c0-ae6b-a0b95ce6bbe1
  -creatorsName: cn=config
  -createTimestamp: 20230511133509Z
  -entryCSN: 20230511133509.495298Z#000000#000#000000
  -modifiersName: cn=config
  -modifyTimestamp: 20230511133509Z
 
  -dn: cn={4}solaris,cn=schema,cn=config
  +dn: cn={3}solaris,cn=schema,cn=config
   objectClass: olcSchemaConfig
  -cn: {4}solaris
  +cn: {3}solaris
   structuralObjectClass: olcSchemaConfig
   entryUUID: 7064bb28-9c84-4e40-b8be-9e77534c1144
   creatorsName: cn=config
  @@ -997,9 +968,9 @@
   modifiersName: cn=config
   modifyTimestamp: 20230511133511Z
 
  -dn: cn={5}kerberos,cn=schema,cn=config
  +dn: cn={4}kerberos,cn=schema,cn=config
   objectClass: olcSchemaConfig
  -cn: {5}kerberos
  +cn: {4}kerberos
   structuralObjectClass: olcSchemaConfig
   entryUUID: 2ff1438e-bd4a-4f70-9382-9b67cae6347b
   creatorsName: cn=config

  From the `diff' output one can confirm
  - `{3}ppolicy' DN has been removed along with all associated entries
    for that record.
  - Other DN's above 3 have been renumbered, e.g. `{4}solaris' has
    become `{3}solairs' as has the DN's `cn' value.


2.1.2.1.2 Failure to remove ppolicy schema results in error

  If the `ppolicy' is not removed from the exported LDIF configuration
  the following error will be seen during import (slapadd):

  olcAttributeTypes: value #0 olcAttributeTypes: Duplicate attributeType: "1.3.6.1.4.1.42.2.27.8.1.1"
  slapadd: could not add entry dn="cn={3}ppolicy,cn=schema,cn=config" (line=796): 
  Closing DB...

  And the schemas for Solaris and Kerberos will be missing from slapd.d!


2.1.2.2 An alternative method: remove and renumber schema files in slapd.d

  [ Chapter 6: OpenLDAP using OLC (cn=config)] suggests an alternative,
  remove and rename the files under `slapd.d'!  If this is the only
  configuration change that is needed then this may well suffice, the
  recommendation is to use the export and import method above.

  1. Make sure the OpenLDAP service is stopped first:

           svcadm disable -s ldap/server:openldap

  2. Update the slapd directory to remove ppolicy.ldif file and renumber
     any subsequent files.

     As an example, examine the current `cn=schema' directory:
     # cd /etc/openldap/slapd.d/cn=config/cn=schema
     # ls -1
     cn={0}core.ldif
     cn={1}cosine.ldif
     cn={2}inetorgperson.ldif
     cn={3}ppolicy.ldif
     cn={4}solaris.ldif
     cn={5}kerberos.ldif

  The following script will remove `cn={3}ppolicy.ldif' and renumber the
  other directories as appropriate.
  ----------------------------------------------------------------------
  #!/bin/ksh
  safe=echo
  adjust=0
  for file in *.ldif; do
      cn=${file%%\{*}
      name=${file#*\}}
      index=${file#*\{}
      index=${index%\}*}
      case $name in
  	(ppolicy.ldif)
  	    (( adjust++ ))
  	    $safe rm $file
  	    continue;;
      esac
      (( i = index - adjust ))
      print "# DEBUG index $index new $i name $name"
      if (( index != i )); then
  	newfile="${cn}{${i}}${name}"
  	$safe mv $file $newfile
      fi
  done
  ----------------------------------------------------------------------

  The output then confirms how the directory needs to be modified.

  # DEBUG index 0 new 0 name core.ldif
  # DEBUG index 1 new 1 name cosine.ldif
  # DEBUG index 2 new 2 name inetorgperson.ldif
  rm cn={3}ppolicy.ldif
  # DEBUG index 4 new 3 name solaris.ldif
  mv cn={4}solaris.ldif cn={3}solaris.ldif
  # DEBUG index 5 new 4 name kerberos.ldif
  mv cn={5}kerberos.ldif cn={4}kerberos.ldif

  - Adjust `safe=""' when confident to have it make the changes, or copy
    and paste the relevant commands from the scripts output.


[ Chapter 6: OpenLDAP using OLC (cn=config)]
<https://www.zytrax.com/books/ldap/ch6/slapd-config.html#use-schemas-delete>


2.1.3 ppolicy overlay and pwdCheckModule
----------------------------------------

  - Quote from: OpenLDAP 2.6 Admin Guide Appendix B.1.:
          The pwdCheckModule option has been moved to the overlay
          configuration. Existing settings in password policy
          entries will be ignored. It will be necessary to use
          pwdUseCheckModule instead and add this configuration
          directive to the overlay when upgrading if it is
          currently in use.


2.1.4 unique overlay
--------------------

  - Quote from: OpenLDAP 2.5 Admin Guide Appendix B.3.:
          In OpenLDAP 2.4 it was possible to bypass
          slapo-unique(5) checks by using the manageDSAIT
          *control* as a *part of the request*. This is no longer
          possible. To achieve the same functionality the relax
          control must be used instead, *and the binding identity
          must* have *manage* permissions on the entry being
          modified.

          With OpenLDAP 2.5 a new keyword "serialize" has been
          added as a part of the unique_uri configuration
          parameter. This will cause all write operations
          requiring uniqueness to be serialized so as to avoid the
          scenario where multiple concurrent updates can prevent
          uniqueness from being enforced. See the slapo-unique(5)
          man page for further details.


  Two considerations then:
  1. `manageDsaIt' replaced with a `relax'
  2. `serialize' keyword for `unique_uri'


2.1.5 shell backend
-------------------

  - Quote from: OpenLDAP 2.5 Admin Guide Appendix B.5.:
          This deprecated backend has been removed from OpenLDAP
          2.5.  Configurations making use of this backend must
          remove it prior to upgrade. The slapd-sock(5) backend is
          recommended as an alternative.


2.1.6 mdb backend
-----------------

  - Quote from: OpenLDAP 2.5 Admin Guide Appendix B.8.:
          It is advised to determine if the new slapd-mdb(5)
          idlexp backend directive and/or the multival database
          directive should be added to the OpenLDAP 2.6
          configuration as well as the existing global sortvals
          directive.  Configuring any of these items requires that
          existing databases be reloaded for them to take full
          effect. This can be done separately from the overall
          upgrade from OpenLDAP 2.4 if desired.


2.1.7 Client utility changes
----------------------------

  - Quote from: OpenLDAP 2.5 Admin Guide Appendix B.9
          The deprecated "-h" (host) and "-p" (port) options for
          the ldap client utilities have been removed. It is
          required to use a properly formatted LDAP URI with the
          "-H" option in OpenLDAP 2.5 and later.


  For a short time Solaris has patched these options back in.

  *You MUST modify your scripts to not rely on these options*

  A future OpenLDAP update may require them for another use!

  These options (`-h $host' and `-p $port') will be removed in a future
  update.  Using them will generate an error on stderr to remind you
  that the options are deprecated with remedial advice to use '-H URI'.
  The warning can be disabled, while this reprieve is in effect, by
  setting environment variable LDAP_OPT_REPRIEVE.

  `ldapurl(1oldap)' can help by presenting the changed format, for
  example:

  ldapurl -h hostname.example.com -p 636

  Produces the following results
  ldap://hostname.example.com:636


2.1.8 monitor backend
---------------------

  - quote from: OpenLDAP 2.6 Admin Guide Appendix B.3.:
          In 2.5 and prior, the managedInfo attribute in the
          cn=Log entry could be used to change the loglevel of the
          slapd process. In 2.6, monitorLogLevel can be used to
          change the slapd log level and monitorDebugLevel can be
          used to change the slapd debug level.


2.1.9 contrib modules
---------------------

  - Quote from: OpenLDAP 2.6 Admin Guide Appendix B.4.:
          If still using the lastbind overlay with
          olcLastBindPrecision (when olcLastBindForwardUpdates is
          needed), you will need to configure precision on its
          backend entry instead and the overlay will honor it. The
          old attribute is no longer accepted or supported.


2.1.10 /usr/include/openldap removed
------------------------------------

  The header files are delivered directly to the standard /usr/include
  directory now, /usr/include/openldap directory is no longer delivered.


  ----------------------------------------------------------------------


2.2 From 2.4.30 or above to 2.4.44 through 2.4.59
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  OpenLDAP 2.4.44 switched from using Berkeley DB (BDB) format to the
  Lightning Memory-Mapped Database (LMDB) format requiring an additional
  configuration change.

  - For section "e" above read:

    slapd's configuration may require a couple of minor changes.

    This is necessary to update:
    - TLSProtocolMin : Minimum protocol version (format change).
      - If applicable change setting from "770" to "3.2"
    - database : openLDAP database type
      - If applicable change setting from bdb to mdb

    Example: Modifying slapd.conf for use with OpenLDAP 2.4.44 and
    above.
      # cp /etc/openldap/slapd.conf /etc/openldap/slapd.2430.conf
      # vi /etc/openldap/slapd.conf
      # diff /etc/openldap/slapd.2430.conf /etc/openldap/slapd.conf
      27c27
      < TLSProtocolMin        770
      ---
      > TLSProtocolMin        3.2
      55c55
      < database      bdb
      ---
      > database      mdb
      #


------------------------------------------------------------------------


      *That concludes the OpenLDAP transition instructions*
