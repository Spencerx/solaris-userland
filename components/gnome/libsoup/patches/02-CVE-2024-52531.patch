
Cherry picked from 
https://gitlab.gnome.org/GNOME/libsoup/-/merge_requests/407

--- a/libsoup/soup-headers.c	2024-11-12 14:19:53.894373770 -0800
+++ b/ibsoup/soup-headers.c	2024-11-12 14:31:03.746833890 -0800
@@ -650,8 +650,9 @@
 }
 
 static void
-decode_quoted_string (char *quoted_string)
+decode_quoted_string_inplace (GString *quoted_gstring)
 {
+	char *quoted_string = quoted_gstring->str;
 	char *src, *dst;
 
 	src = quoted_string + 1;
@@ -665,10 +666,11 @@
 }
 
 static gboolean
-decode_rfc5987 (char *encoded_string)
+decode_rfc5987_inplace (GString *encoded_gstring)
 {
 	char *q, *decoded;
 	gboolean iso_8859_1 = FALSE;
+ 	const char *encoded_string = encoded_gstring->str;
 
 	q = strchr (encoded_string, '\'');
 	if (!q)
@@ -697,14 +699,7 @@
 		decoded = utf8;
 	}
 
-	/* If encoded_string was UTF-8, then each 3-character %-escape
-	 * will be converted to a single byte, and so decoded is
-	 * shorter than encoded_string. If encoded_string was
-	 * iso-8859-1, then each 3-character %-escape will be
-	 * converted into at most 2 bytes in UTF-8, and so it's still
-	 * shorter.
-	 */
-	strcpy (encoded_string, decoded);
+	g_string_assign (encoded_gstring, decoded);
 	g_free (decoded);
 	return TRUE;
 }
@@ -714,15 +709,17 @@
 {
 	GHashTable *params;
 	GSList *list, *iter;
-	char *item, *eq, *name_end, *value;
-	gboolean override, duplicated;
 
 	params = g_hash_table_new_full (soup_str_case_hash, 
 					soup_str_case_equal,
-					g_free, NULL);
+					g_free, g_free);
 
 	list = parse_list (header, delim);
 	for (iter = list; iter; iter = iter->next) {
+               char *item, *eq, *name_end;
+               gboolean override, duplicated;
+               GString *parsed_value = NULL;
+
 		item = iter->data;
 		override = FALSE;
 
@@ -737,19 +734,19 @@
 
 			*name_end = '\0';
 
-			value = (char *)skip_lws (eq + 1);
+			parsed_value = g_string_new ((char *)skip_lws (eq + 1));
 
 			if (name_end[-1] == '*' && name_end > item + 1) {
 				name_end[-1] = '\0';
-				if (!decode_rfc5987 (value)) {
+				if (!decode_rfc5987_inplace (parsed_value)) {
+					g_string_free (parsed_value, TRUE);
 					g_free (item);
 					continue;
 				}
 				override = TRUE;
-			} else if (*value == '"')
-				decode_quoted_string (value);
-		} else
-			value = NULL;
+                        } else if (parsed_value->str[0] == '"')
+                               decode_quoted_string_inplace (parsed_value);
+                }
 
 		duplicated = g_hash_table_lookup_extended (params, item, NULL, NULL);
 
@@ -757,11 +754,16 @@
 			soup_header_free_param_list (params);
 			params = NULL;
 			g_slist_foreach (iter, (GFunc)g_free, NULL);
+                        if (parsed_value)
+                                g_string_free (parsed_value, TRUE);
 			break;
-		} else if (override || !duplicated)
-			g_hash_table_replace (params, item, value);
-		else
+		} else if (override || !duplicated) {
+			g_hash_table_replace (params, item, parsed_value ? g_string_free (parsed_value, FALSE) : NULL);
+		} else {
+			if (parsed_value)
+				g_string_free (parsed_value, TRUE);
 			g_free (item);
+		}
 	}
 
 	g_slist_free (list);
--- a/tests/header-parsing-test.c	2024-11-12 14:32:29.979166605 -0800
+++ b/tests/header-parsing-test.c	2024-11-12 14:38:37.237695810 -0800
@@ -831,6 +831,16 @@
 	    { "filename", "t\xC3\xA9st.txt" },
 	  },
 	},
+        /* This tests invalid UTF-8 data which *should* never be passed here but it was designed to be robust against it. */
+        { TRUE,
+              "invalid*=\x69\x27\x27\x93\x93\x93\x93\xff\x61\x61\x61\x61\x61\x61\x61\x62\x63\x64\x65\x0a; filename*=iso-8859-1''\x69\x27\x27\x93\x93\x93\x93\xff\x61\x61\x61\x61\x61\x61\x61\x62\x63\x64\x65\x0a; foo",
+              {
+                    { "filename", "i''\302\223\302\223\302\223\302\223\303\277aaaaaaabcde" },
+                    { "invalid", "\302\223\302\223\302\223\302\223\303\277aaaaaaabcde" },
+                    { "foo", NULL },
+
+                },
+        }
 };
 static const int num_paramlisttests = G_N_ELEMENTS (paramlisttests);
 
--- a/tests/proxy-test.c	2024-11-12 14:40:04.101114975 -0800
+++ b/tests/proxy-test.c	2024-11-12 14:40:24.719325210 -0800
@@ -1,6 +1,7 @@
 /* -*- Mode: C; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
 
 #include "test-utils.h"
+#include <gio/gio.h>
 
 typedef struct {
 	const char *explanation;
--- b/tests/hsts-db-test.c	2024-11-12 14:39:33.371457535 -0800
+++ a/tests/hsts-db-test.c	2024-11-12 14:40:56.073325115 -0800
@@ -1,8 +1,8 @@
+#include "test-utils.h"
 #include <glib.h>
 #include <glib/gstdio.h>
 
 #include <stdio.h>
-#include "test-utils.h"
 
 #define DB_FILE "hsts-db.sqlite"
 
