Existing patch from desktop for building on Solaris - Needs reworking and cleanup so this can be contributed upstream.

XXX file upstream enhancement

--- libgtop-2.41.2/sysdeps/solaris/mem.c
+++ libgtop-2.41.2/sysdeps/solaris/mem.c
@@ -26,6 +26,8 @@ #include <glibtop/mem.h>
 #include <assert.h>
 #include <unistd.h>
 
+#include <sys/vm_usage.h>
+
 #include <glibtop_private.h>
 
 /* Init function. */
@@ -97,37 +99,17 @@ buf->flags |= (1 << GLIBTOP_MEM_LOCKED);
 	}
     }
 
-    /* Bunyip module provides data in multiples of system page size */
+    vmusage_t result;
+    size_t nrec; /* This is used in getvmusage to get the no of result structures */
 
-    if((ksp = server->machine->bunyip) && kstat_read(kc, ksp, NULL) >= 0)
-    {
-	kn = kstat_data_lookup(ksp, "pages_exec");
-	if(kn)
-	{
-	    buf->shared = (KN_VALUE << PAGESHIFT);
-	    buf->flags |= (1 << GLIBTOP_MEM_SHARED);
-	}
-
-	kn = kstat_data_lookup(ksp, "pages_vnode");
-	if(kn)
-	{
-	    buf->buffer = (KN_VALUE << PAGESHIFT);
-	    buf->flags |= (1 << GLIBTOP_MEM_BUFFER);
-	}
-
-	kn = kstat_data_lookup(ksp, "pages_anon");
-	if(kn)
-	{
-	    buf->user = (KN_VALUE << PAGESHIFT);
-	    buf->flags |= (1 << GLIBTOP_MEM_USER);
-	}
-	else
-	    goto user_old_way;
-    }
-    else /* Bunyip is not available, let's compute buf->user the old way */
+    if(getvmusage(VMUSAGE_SYSTEM, 5, &result, &nrec) != 0)
     {
     user_old_way:
-	buf->user = buf->total - buf->free - buf->cached - buf->buffer;
-	buf->flags |= (1 << GLIBTOP_MEM_USER);
+          buf->user = buf->total - buf->free - buf->cached - buf->buffer;
+          buf->flags |= (1 << GLIBTOP_MEM_USER);
+    }
+    else {
+          buf->user = result.vmu_rss_all;
+          buf->flags |= (1 << GLIBTOP_MEM_USER);
     }
 }
