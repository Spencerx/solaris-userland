Adjustments needed to get memcached to build
with the Studio compiler on Solaris.

diff -ur memcached-1.6.18.orig//extstore.c memcached-1.6.18/extstore.c
--- memcached-1.6.22/extstore.c
+++ memcached-1.6.22/extstore.c
@@ -860,7 +860,6 @@ static void *extstore_io_thread(void *ar
         }
     }
 
-    return NULL;
 }
 
 // call with *p locked.
@@ -1005,5 +1004,4 @@ static void *extstore_maint_thread(void
         STAT_UL(e);
     }
 
-    return NULL;
 }
--- memcached-1.6.22/logger.c
+++ memcached-1.6.22/logger.c
@@ -560,7 +560,7 @@ void logger_set_gid(uint64_t gid) {
 #ifdef HAVE_GCC_64ATOMICS
     __sync_add_and_fetch(&logger_gid, gid);
 #elif defined(__sun)
-    atomic_add_64(&logger_gid);
+    atomic_swap_64(&logger_gid, gid);
 #else
     mutex_lock(&logger_atomics_mutex);
     logger_gid = gid;
--- memcached-1.6.22/slab_automove.c
+++ memcached-1.6.22/slab_automove.c
@@ -78,7 +78,7 @@ void slab_automove_run(void *arg, int *s
     int oldest = -1;
     uint64_t oldest_age = 0;
     int youngest = -1;
-    uint64_t youngest_age = ~0;
+    uint64_t youngest_age = (uint64_t) ~0;
     bool youngest_evicting = false;
     *src = -1;
     *dst = -1;
--- memcached-1.6.22/slabs.c
+++ memcached-1.6.22/slabs.c
@@ -213,7 +213,7 @@ void slabs_init(const size_t limit, cons
      * the initial allocation fails, the required settings do not persist
      * for remaining allocations. As such it makes little sense to do slab
      * preallocation. */
-    bool __attribute__ ((unused)) do_slab_prealloc = false;
+    bool do_slab_prealloc = false;
 
     mem_limit = limit;
 
--- memcached-1.6.22/storage.c
+++ memcached-1.6.22/storage.c
@@ -660,7 +660,6 @@ static void *storage_write_thread(void *
         }
         pthread_mutex_lock(&storage_write_plock);
     }
-    return NULL;
 }
 
 // TODO
@@ -1019,9 +1018,6 @@ static void *storage_compact_thread(void
                 to_sleep += settings.ext_max_sleep;
         }
     }
-    free(readback_buf);
-
-    return NULL;
 }
 
 // TODO
