There isn't a self-test suite provided for this component.

Useful resources for how to test this can be found at:

  https://compscinotes.wordpress.com/2010/04/18/unixodbc-mysql-sample-program/
  http://www.unixodbc.org/unixODBCsetup.html
  http://www.easysoft.com/developer/languages/c/odbc_tutorial.html

From the later, a couple of simple commands to run are:

# Make sure you have the correct new version of the package installed.
odbcinst --version

# Install all the Instant Client Solaris packages with:
sudo pkg install \*instantclient\*

# Create a .odbc.ini in your home directory containing the following:
cat > ~/.odbc.ini <<EOF
[plus1]
Application Attributes = T
Attributes = W
BatchAutocommitMode = IfAllSuccessful
BindAsFLOAT = F
CloseCursor = F
DisableDPM = F
DisableMTS = T
Driver = /usr/oracle/instantclient/12.1/lib/64/libsqora.so.12.1
DSN = TestDBDSN
EXECSchemaOpt =
EXECSyntax = T
Failover = T
FailoverDelay = 10
FailoverRetryCount = 10
FetchBufferSize = 64000
ForceWCHAR = F
Lobs = T
Longs = T
MaxLargeData = 0
MetadataIdDefault = F
QueryTimeout = T
ResultSets = T
ServerName =
SQLGetData extensions = F
Translation DLL =
Translation Option = 0
DisableRULEHint = T
UserID =
StatementCache=F
CacheBufferSize=20
UseOCIDescribeAny=F
SQLTranslateErrors=F
MaxTokenSize=8192
AggregateSQLType=FLOAT
EOF

# list all systems (as defined in ~/.odbc.ini)
odbcinst -q -s

# Create a file called tnsnames.ora.
cat > tnsnames.ora <<EOF
plus1 =
  (DESCRIPTION =
    (ADDRESS_LIST =
        (ADDRESS =
          (PROTOCOL = TCP)
          (HOST = XXX_HOST)
          (PORT = XXX_PORT)
        )
    )
    (CONNECT_DATA =
      (SERVICE_NAME = XXX_SERVICE_NAME)
    )
  )
EOF

# Create a file called odbcconnect test.
cat > odbcconnect.c <<EOF
/*  Copyright (c) 2004, 2012, Oracle and/or its affiliates.
 *  All rights reserved.
 */

/*
   NAME
     odbcconnect.c - Simple ODBC Connect demo

   DESCRIPTION
     Basic ODBC Connect demo
*/

#include <stdio.h>
#include <sql.h>
#include <sqlext.h>

#define STR_LEN 50

int main (int argc, char *argv[])
{
  HENV          henv;               /* environment handle */
  HDBC          hdbc;               /* connection handle */
  HSTMT         hstmt;              /* statement handle */
  SDWORD        retcode;            /* return code */
  UCHAR         info[STR_LEN];      /* info string for SQLGetInfo */
  SQLSMALLINT   cbInfoValue;
  SQLCHAR       SqlState[6], Msg[SQL_MAX_MESSAGE_LENGTH];
  SQLINTEGER    NativeError;
  SQLSMALLINT   MsgLen;

  retcode = SQLAllocEnv (&henv);
  retcode = SQLSetEnvAttr (henv, SQL_ATTR_ODBC_VERSION, (void *)
SQL_OV_ODBC3,
              SQL_IS_INTEGER);
  retcode = SQLAllocConnect (henv, &hdbc);
  retcode = SQLConnect (hdbc, "plus1", SQL_NTS, "XXX_USER", SQL_NTS, "XXX_PASS",
              SQL_NTS);

  if (retcode != SQL_SUCCESS)
  {
    if ((retcode = SQLGetDiagRec (SQL_HANDLE_DBC, hdbc, 1, SqlState,
                   &NativeError, Msg, sizeof(Msg), &MsgLen)) != SQL_NO_DATA)
      printf ("SqlState = %s\n Message = %s\n", SqlState, Msg);
    goto EXIT;
  }

  retcode = SQLGetInfo (hdbc, SQL_DBMS_VER, &info, STR_LEN, &cbInfoValue);

  if (retcode != SQL_SUCCESS)
  {
    if ((retcode = SQLGetDiagRec (SQL_HANDLE_DBC, hdbc, 1, SqlState,
                   &NativeError, Msg, sizeof(Msg), &MsgLen)) != SQL_NO_DATA)
      printf ("SqlState = %s\n Message = %s\n", SqlState, Msg);
    goto EXIT;
  }

  printf ("Current DBMS version is %s\n", info);

EXIT:
  SQLDisconnect (hdbc);
  SQLFreeConnect (hdbc);
  SQLFreeEnv (henv);
  return 0;
}
EOF

# Modify configuration and source file according to your database.
# (https://systemswiki.us.oracle.com/twiki/bin/view/Orgs/ServerOS/TestingCxOracle)
gsed -i -e 's/XXX_HOST/YOUR_HOST/' -e 's/XXX_PORT/YOUR_PORT/' -e 's/XXX_SERVICE_NAME/YOUR_SERVICE_NAME/' tnsnames.ora
gsed -i -e 's/XXX_USER/YOUR_USER/' -e 's/XXX_PASS/YOUR_PASS/' odbcconnect.c

# Compile example program and run it with following environment variables:
# - TNS_ADMIN - directory containing the tnsnames.ora file
# - TWO_TASK - name of the database (plus1 in the above example)a
gcc -I/usr/include/odbc -m64 -o odbcconnect odbcconnect.c -lodbc
TNS_ADMIN=. TWO_TASK=plus1 ./odbcconnect

# END
