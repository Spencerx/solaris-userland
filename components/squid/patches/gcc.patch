name collision with macro DOMAIN
 $ ggrep -rw DOMAIN /usr/include/
/usr/include/math.h:#define     DOMAIN          1

Need to be evaluated before submitting to upstream.

################################################################################
/builds/jsasek/squid/components/squid/squid-4.10/src/esi/VarState.cc: In member function 'char* ESIVariableUserAgent::getProductVersion(cons
t char*)':
/builds/jsasek/squid/components/squid/squid-4.10/src/esi/VarState.cc:153:9: error: 'index' was not declared in this scope
     t = index(s,'/');
         ^~~~~
/builds/jsasek/squid/components/squid/squid-4.10/src/esi/VarState.cc:153:9: note: suggested alternative: 'index_t'
     t = index(s,'/');
         ^~~~~
         index_t

################################################################################
squid-4.11/src/pconn.cc: In member function 'void PconnPool::push(const ConnectionPointer&, const char*)':
squid-4.11/src/pconn.cc:435:46: error: '%s' directive output may be truncated writing up to 777 bytes into a region of size 51 [-Werror=format-truncation=]
  435 |     snprintf(desc, FD_DESC_SZ, "Idle server: %s", aKey);
      |                                              ^~
squid-4.11/src/pconn.cc:435:13: note: 'snprintf' output between 14 and 791 bytes into a destination of size 64
  435 |     snprintf(desc, FD_DESC_SZ, "Idle server: %s", aKey);
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1plus: all warnings being treated as errors

--- a/src/auth/basic/SMB_LM/valid.cc
+++ b/src/auth/basic/SMB_LM/valid.cc
@@ -22,7 +22,7 @@ #endif
 
 // BACKUP is unused
 int
-Valid_User(char *USERNAME, char *PASSWORD, const char *SERVER, char *, const char *DOMAIN)
+Valid_User(char *USERNAME, char *PASSWORD, const char *SERVER, char *, const char *Domain)
 {
     const char *supportedDialects[] = {"PC NETWORK PROGRAM 1.0",
                                        "MICROSOFT NETWORKS 1.03",
@@ -37,7 +37,7 @@ };
     SMB_Handle_Type con;
 
     SMB_Init();
-    con = SMB_Connect_Server(nullptr, SERVER, DOMAIN);
+    con = SMB_Connect_Server(nullptr, SERVER, Domain);
     if (con == NULL) {
         return (NTV_SERVER_ERROR);
     }
--- a/src/auth/basic/SMB_LM/valid.h
+++ b/src/auth/basic/SMB_LM/valid.h
@@ -15,7 +15,7 @@ #define NTV_SERVER_ERROR 1
 #define NTV_PROTOCOL_ERROR 2
 #define NTV_LOGON_ERROR 3
 
-int Valid_User(char *USERNAME, char *PASSWORD, const char *SERVER, char *BACKUP, const char *DOMAIN);
+int Valid_User(char *USERNAME, char *PASSWORD, const char *SERVER, char *BACKUP, const char *Domain);
 
 #endif /* SQUID_SRC_AUTH_BASIC_SMB_LM_VALID_H */
 
--- a/src/esi/VarState.cc
+++ b/src/esi/VarState.cc
@@ -12,6 +12,7 @@ #include "squid.h"
 #include "esi/VarState.h"
 #include "fatal.h"
 #include "HttpReply.h"
+#include <strings.h>
 
 char const *ESIVariableUserAgent::esiUserOs[]= {
     "WIN",
--- a/src/pconn.cc
+++ b/src/pconn.cc
@@ -437,7 +437,14 @@ list->push(conn);
     assert(!comm_has_incomplete_write(conn->fd));
 
     LOCAL_ARRAY(char, desc, FD_DESC_SZ);
+#ifdef __GNUC__
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wformat-truncation"
+#endif
     snprintf(desc, FD_DESC_SZ, "Idle server: %s", aKey);
+#ifdef __GNUC__
+#pragma GCC diagnostic pop
+#endif
     fd_note(conn->fd, desc);
     debugs(48, 3, "pushed " << conn << " for " << aKey);
 
